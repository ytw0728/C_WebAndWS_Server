[ INFO: MESSAGE ] WebSocketServer Start

[ INFO: SEND ] Í≤ΩÎ°ú Ïù¥Îèô ÏÑ±Í≥µ

[ INFO: MESSAGE ] WEB SERVER SERVICE START

[ INFO: fd = 5 ] Accepted

[ INFO: fd = 6 ] Accepted

[ INFO: GET / HTTP/1.1
Host: localhost
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: fd = 8 ] Accepted

[ INFO: fd = 7 ] Accepted

[ INFO: SEND ] index.html

[ INFO: fd = 11 ] Accepted

[ INFO: SEND ] request index.html 		200

[ INFO: fd = 5 ] Accepted

[ INFO: GET /css/font.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: GET /css/index.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: SEND ] css/index.css

[ INFO: GET /js/index.js HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: SEND ] css/font.css

[ INFO: SEND ] request css/font.css 		200

[ INFO: SEND ] js/index.js

[ INFO: SEND ] request css/index.css 		200

[ INFO: SEND ] request js/index.js 		200

[ INFO: GET /pics/garbage.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: GET /pics/rubber-eraser.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

cript" src = "/js/index.js"></script>
</head>
<body>
	<div id = "wrap">
		<div id = "waiting">
			<header class = "waitingHeader"><a href = "/">DOODLE</a></header>
			<container id = "waitingBoard">
				<div class = "nicknameInputBox">
					<label for="nickname">Nickname | </label><input type="text" placeholder="Type your nickname" id="nickname"/>
					<button onclick = "statusManager.userAdd(event)">Play</button>
				</div>
				<div class = "roomLists">
					<span id="prevBtn" onclick="waiting.prev(event)">&lt;</span>
					<span id="nextBtn" onclick="waiting.next(event)">&gt;</span>
					<ul class ="rooms">
						
					</ul>
					<span class = "makeRoomBtn" onclick="statusManager.makeRoom(event)">
						Make Room!
					</span>
					<span class = "reFreshRoomBtn" onclick="statusManager.refreshRoomList(event)"></span>
				</div>
				<div class = "waitingRoom">
					<span class="title">WAITING ROOM</span>
					<ul class = "waitingMembers">
					</ul>
					<div class = "waitingRoomBtns" >
						<span class="exitRoom" onclick="statusManager.exitRoom(event)" >EXIT</span>
						<span class="gameStart" onclick="statusManager.enterGameRoom(event)" >START!</span>
					</div>
				</div>
			</container>
		</div>
		<div id = "app">
			<header><a href = "/">DOODLE</a><div class = "answer"></div><div class = "clock">60.00</div></header>
			<container id = "main">
					<div id = "userBox">
						<ul class = "users">
							<li class = "user">
								<span>
									User01
								</span>
							</li>
							<li class = "user">
								<span>
									User02
								</span>
							</li>
							<li class = "user">
								<span>
									User03
								</span>
							</li>
						</ul>
						<span class = "exitGameRoom" onclick="statusManager.exitGameRoom(event)">EXIT</span>
					</div>
					<div id = "playBoard">
						<div id = "canvasBox">
							<canvas id = "canvas">Ïù¥ Î∏åÎùºÏö∞Ï†ÄÎäî canvas ÌÉúÍ∑∏Î•º ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.</canvas>
						</div>
						<div id = "toolBox">
							<div id = "colorBox">
								<ul id = "colors">
									<li class = "color" data-color="#ffffff" ></li>
									<li class = "color" data-color="#000000" ></li>
									<li class = "color" data-color="#FE1B02" ></li>
									<li class = "color" data-color="#FC9C00" ></li>
									<li class = "color" data-color="#FDFC06" ></li>
									<li class = "color" data-color="#01FE02" ></li>
									<li class = "color" data-color="#005FFF" ></li>
									<li class = "color" data-color="#0212FF" ></li>
									<li class = "color" data-color="#FF00FB" ></li>
								</ul>
							</div>
							<div id = "brushBox">
								<ul id = "brushs">
									<li class = "pencil"></li>
									<li class = "eraser"></li>
									<li class = "brush" data-px = "3"><span></span></li>
									<li class = "brush" data-px = "6"><span></span></li>
									<li class = "brush" data-px = "9"><span></span></li>
									<li class = "brush" data-px = "12"><span></span></li>
									<li class = "clear"></li>
								</ul>
							</div>
						</div>
					</div> 
					<div id = "chat">
						<div class = "chatHistory">
						</div>
						<div class = "inputBox">
							<textarea id = "chatInput"></textarea>
							<input id = "sendBtn" type = "button" value = "SEND"/>
						</div>
					</div>
			</container>
		</div>
	</div>
</body>
</html> ] request

[ INFO: SEND ] pics/garbage.png

[ INFO: SEND ] pics/rubber-eraser.png

[ INFO: SEND ] request pics/garbage.png 		200

[ INFO: SEND ] request pics/rubber-eraser.png 		200

[ INFO: fd = 5 ] Accepted

[ INFO: fd = 11 ] Accepted

[ INFO: GET /css/font/Pangolin-Regular.ttf HTTP/1.1
Host: localhost
Connection: keep-alive
Origin: http://localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/css/font.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

Á$∞Ê·'⁄"$∑ñ∂ÇHhå¶-¬Iˆ&! ] request

[ INFO: GET /css/font/NotoSansKR-Light.otf HTTP/1.1
Host: localhost
Connection: keep-alive
Origin: http://localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/css/font.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

NâOm‹väÈrï+¯Z|Z“æfÖt…Jâµ‚ö§≠ï.[©∞êk‚ìô§]c°tÈJÅ)úü §ÌS§ÀówFÒÖ¯4¶}¡(ÈÊõç‚S8ÿ∂Q∫ÑyfÆ¯Ù•—ÊJó—Eôt ] request

[ INFO: SEND ] css/font/Pangolin-Regular.ttf
[ INFO: SEND ] css/font/NotoSansKR-Light.otf


[ INFO: fd = 14 ] Accepted

[ INFO: GET /pics/paint-brush.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

= document.getElementById("canvas");
		this.tag.width = this.tag.offsetWidth;
		this.tag.height = this.tag.offsetHeight;

		canvas.addEventListener("mousedown", this.mouseHandle.bind(this));
		canvas.addEventListener("mousemove", this.mouseHandle.bind(this));
		canvas.addEventListener("mouseup", this.mouseHandle.bind(this));
		this.canvas = this.tag.getContext("2d");
		
		this.brushType = true;
		this.color = "#000000";
		this.canvas.fillStyle = this.color;
        this.canvas.strokeStyle = this.color;

        this.px = 3;
        this.canvas.lineWidth = this.px;
        this.canvas.lineCap = "round";
        this.canvas.lineJoin = "round";

		this.prevX = this.prevY = 0;
		this.x = this.y = 0;

		this.initEvent();
		this.prepareToDraw();
	}

	initEvent(){
		this.colors = document.getElementsByClassName("color");
		for( let i = 0 ; i < this.colors.length ; i++){
			this.colors[i].addEventListener("click", this.colorChange.bind(this));
			this.colors[i].style.background = this.colors[i].getAttribute("data-color");
		}

		
		this.brush = document.getElementsByClassName("brush");
		for( let i = 0 ; i < this.brush.length ; i++){
			this.brush[i].addEventListener("click", this.brushChange.bind(this));
			this.brush[i].children[0].style.width = this.brush[i].getAttribute("data-px") + "px";
			this.brush[i].children[0].style.height = this.brush[i].getAttribute("data-px") + "px";
			this.brush[i].children[0].style.borderRadius = this.brush[i].getAttribute("data-px")/2 + 2 + "px";
		}
		

		this.pencil = document.getElementsByClassName("pencil")[0];
		this.pencil.addEventListener("click", this.setPencil.bind(this));
		

		this.eraser = document.getElementsByClassName("eraser")[0];
		this.eraser.addEventListener("click", this.setEraser.bind(this));

		let clear = document.getElementsByClassName("clear")[0];
		clear.addEventListener("click", this.clearCanvas.bind(this));
	}

	prepareToDraw(){
		if( !isPainter ) return;
		this.colors[1].style.backgroundBlendMode="darken";
		this.colors[1].style.className = "color on";

		this.brush[0].style.background = "#D2EAFF";

		this.pencil.style.backgroundColor = "#ccc";
	}

	mouseHandle(event){
		event.preventDefault();
		if( !isPainter ) return;
		if( this.flag ){
			if( this.locked ) return;
			this.locked = true;
			setTimeout(() => this.locked = false, 20);
		}
		if( event.type == "mousedown"){
			this.flag = true;
			let position = this.getMousePos(event);
			this.prevX = this.x = position.x;
			this.prevY = this.y = position.y;
			this.draw();
		}
		else if( this.flag && event.type == "mousemove"){
			if( this.flag ){
				let position = this.getMousePos(event);
				this.prevX = this.x;
				this.prevY = this.y;
				this.x = position.x;
				this.y = position.y;
				this.draw();
			}
		}
		else if( event.type == "mouseup"){
			this.flag = false;
			let position = this.getMousePos(event);
			this.prevX = this.x;
			this.prevY = this.y;
			this.x = position.x;
			this.y = position.y;
			this.draw();
		}
		
	}

	getMousePos(evt) {
		let rect = this.tag.getBoundingClientRect();
		return {
			x: evt.offsetX,
			y: evt.offsetY
		};
  	}

  	draw(){
        this.canvas.beginPath();
        this.canvas.moveTo(this.prevX,this.prevY);
        this.canvas.lineTo(this.x, this.y);
        this.canvas.stroke();

        this.sendDrawingPoint();
  	}

  	drawWithJson(){
  		if( isPainter ) return;

  	}
  	sendDrawingPoint(){
  		if( !isPainter ) return;
  		let msg = "00";
  		let jsonObject = {
  			prevX : this.prevX,
  			prevY : this.prevY,
  			x : this.x,
  			y : this.y,
  			color : this.color,
  			px : this.px
  		}

  		msg += JSON.stringify(jsonObject);
  		ws.send(msg);
  	}

  	colorChange(event){
  		if( !isPainter ) return;
  		let target = event.target;
  		if( !target.hasAttribute("data-color") ) target = target.parentNode;

  		let color = target.getAttribute("data-color");
		this.canvas.fillStyle = this.canvas.strokeStyle = this.color = color;

		for(let i = 0; i< this.colors.length; i++){
			this.colors[i].style.backgroundBlendMode = "normal";
			this.colors[i].className = "color";
		}
		target.style.backgroundBlendMode = "darken";
		target.className = "color on";
		this.setPencil();
  	}

  	brushChange(event){
  		if( !isPainter ) return;
  		event.preventDefault();
  		let target = event.target;
  		if( !target.hasAttribute("data-px") )target = target.parentNode;

  		this.px = target.getAttribute("data-px");
  		this.canvas.lineWidth = this.px;

  		for( let i = 0 ; i < this.brush.length; i++){
  			this.brush[i].style.background = "none";
  		}

  		target.style.background = "#D2EAFF";
  	}
  	setPencil(event){
  		if( !isPainter ) return;
  		this.brushType = true;
  		this.canvas.fillStyle = this.color;
  		this.canvas.strokeStyle = this.color;
		this.eraser.style.backgroundColor = "#fff";
		this.pencil.style.backgroundColor = "#ccc";
  	}
  	setEraser(event){
  		if( !isPainter ) return;
  		this.brushType = false;
		this.canvas.fillStyle = "#ffffff";
        this.canvas.strokeStyle = "#ffffff";
        this.pencil.style.backgroundColor = "#fff";
        this.eraser.style.backgroundColor = "#ccc";
  	}
  	clearCanvas(event){
  		this.canvas.clearRect(0, 0, this.tag.clientWidth, this.tag.clientHeight);
  	}
}



class Websocket{
	constructor(){
		this.ws = new WebSocket("ws://localhost:12345");
		this.ws.onopen = function (event) {
			console.log("ws connected");
		};
		this.ws.onmessage = function (event){

			let packet = event.data;

			// let tmp = event.data.replace(/(?:\r\n|\n|\r)/g, '<br/>'); // dummyData
			// let packet = '01{"code":"00","msg":"'+tmp+'","uid":1,"nickname":"someone","timestamp":"'+new Date()+'"}';
			let code = packet.substring(0,2);
			let json = packet.substring(2,packet.length);
			let jsonObject = JSON.parse(json);

			if( code === "01" ){ // message
				chat.addMsg(jsonObject);
				return;
			}
			if( code == "00"){
				draw.drawWithJson(jsonObject);
			}
			if( code === "23"){
				notice.showAnswerLen(jsonObject);
				return;
			}
		}
		this.ws.onclose = function(event) {
			console.log("ws close");
		    setTimeout(() => {
		    	ws = new Websocket();
		    	if( status != 0 ){
		    		console.log("reconnect ws");
		    		if( status == 1 ) statusManager.exitRoom();
		    		else if( status == 2 ) statusManager.exitGameRoom();
		    	}
			}, 500);
		};
		this.ws.onerror = function(event){
			// this.ws.close();
			console.log("ws catched error");
		}
	}

	send(msg){
		this.ws.send(msg);
	}
}
			this.answer.innerHTML += "_ ";
		}
	}
}

class Chatting{
	constructor(){
		this.chatHistory = document.getElementsByClassName("chatHistory")[0];
		this.initEvent();
	}
	addMsg(jsonObject){
		this.chatHistory.innerHTML += "\
			<div class = 'msg'>\
				<span class = 'sender'>"
					+ jsonObject.nickname  + " | " + 
				"</span>\
				<span class = 'contents'>"
				 + jsonObject.msg + 
				"</span>\
			</div>";
		this.chatHistory.scrollTop = this.chatHistory.scrollHeight;
	}

	initEvent(){
		let chatInput = document.getElementById("chatInput");
		let sendBtn = document.getElementById("sendBtn");

		sendBtn.addEventListener("click", this.sendMessage);
		chatInput.addEventListener("keydown", this.keyPressHandle.bind(this));
	}
	sendMessage(event){
		event.preventDefault();
		let box = document.getElementById("chatInput");
		if( box.value == "" ) return;		
		let msg = "01";
		˜=v ] request

[ INFO: SEND ] pics/paint-brush.png

[ INFO: SEND ] request pics/paint-brush.png 		200

[ INFO: SEND ] request css/font/Pangolin-Regular.ttf 		200

[ INFO: SEND ] request css/font/NotoSansKR-Light.otf 		200

[ INFO: accept() ] connect

[ INFO: 01{"code":"01","msg":"Í∞ÄÎÇòÎã§Îùº","uid":null,"nickname":"Lorem Ipsum","timestamp":"2018-06-07T18:18:50.920Z"} ] receive message

[ INFO: SEND ] Í≤ΩÎ°ú Ïù¥Îèô ÏÑ±Í≥µ

[ INFO: MESSAGE ] WEB SERVER SERVICE START

[ INFO: fd = 5 ] Accepted

[ INFO: fd = 6 ] Accepted

[ INFO: GET / HTTP/1.1
Host: localhost
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: fd = 8 ] Accepted

[ INFO: SEND ] index.html

[ INFO: fd = 9 ] Accepted

[ INFO: fd = 10 ] Accepted
[ INFO: SEND ] request index.html 		200


[ INFO: GET /css/index.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request
[ INFO: fd = 5 ] Accepted


[ INFO: GET /js/index.js HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: SEND ] css/index.css

[ INFO: GET /css/font.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: SEND ] js/index.js

[ INFO: SEND ] request css/index.css 		200
[ INFO: SEND ] css/font.css


[ INFO: SEND ] request css/font.css 		200

[ INFO: SEND ] request js/index.js 		200

[ INFO: GET /pics/garbage.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

/javascript" src = "/js/index.js"></script>
</head>
<body>
	<div id = "wrap">
		<div id = "waiting">
			<header class = "waitingHeader"><a href = "/">DOODLE</a></header>
			<container id = "waitingBoard">
				<div class = "nicknameInputBox">
					<label for="nickname">Nickname | </label><input type="text" placeholder="Type your nickname" id="nickname"/>
					<button onclick = "statusManager.userAdd(event)">Play</button>
				</div>
				<div class = "roomLists">
					<span id="prevBtn" onclick="waiting.prev(event)">&lt;</span>
					<span id="nextBtn" onclick="waiting.next(event)">&gt;</span>
					<ul class ="rooms">
						
					</ul>
					<span class = "makeRoomBtn" onclick="statusManager.makeRoom(event)">
						Make Room!
					</span>
					<span class = "reFreshRoomBtn" onclick="statusManager.refreshRoomList(event)"></span>
				</div>
				<div class = "waitingRoom">
					<span class="title">WAITING ROOM</span>
					<ul class = "waitingMembers">
					</ul>
					<div class = "waitingRoomBtns" >
						<span class="exitRoom" onclick="statusManager.exitRoom(event)" >EXIT</span>
						<span class="gameStart" onclick="statusManager.enterGameRoom(event)" >START!</span>
					</div>
				</div>
			</container>
		</div>
		<div id = "app">
			<header><a href = "/">DOODLE</a><div class = "answer"></div><div class = "clock">60.00</div></header>
			<container id = "main">
					<div id = "userBox">
						<ul class = "users">
							<li class = "user">
								<span>
									User01
								</span>
							</li>
							<li class = "user">
								<span>
									User02
								</span>
							</li>
							<li class = "user">
								<span>
									User03
								</span>
							</li>
						</ul>
						<span class = "exitGameRoom" onclick="statusManager.exitGameRoom(event)">EXIT</span>
					</div>
					<div id = "playBoard">
						<div id = "canvasBox">
							<canvas id = "canvas">Ïù¥ Î∏åÎùºÏö∞Ï†ÄÎäî canvas ÌÉúÍ∑∏Î•º ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.</canvas>
						</div>
						<div id = "toolBox">
							<div id = "colorBox">
								<ul id = "colors">
									<li class = "color" data-color="#ffffff" ></li>
									<li class = "color" data-color="#000000" ></li>
									<li class = "color" data-color="#FE1B02" ></li>
									<li class = "color" data-color="#FC9C00" ></li>
									<li class = "color" data-color="#FDFC06" ></li>
									<li class = "color" data-color="#01FE02" ></li>
									<li class = "color" data-color="#005FFF" ></li>
									<li class = "color" data-color="#0212FF" ></li>
									<li class = "color" data-color="#FF00FB" ></li>
								</ul>
							</div>
							<div id = "brushBox">
								<ul id = "brushs">
									<li class = "pencil"></li>
									<li class = "eraser"></li>
									<li class = "brush" data-px = "3"><span></span></li>
									<li class = "brush" data-px = "6"><span></span></li>
									<li class = "brush" data-px = "9"><span></span></li>
									<li class = "brush" data-px = "12"><span></span></li>
									<li class = "clear"></li>
								</ul>
							</div>
						</div>
					</div> 
					<div id = "chat">
						<div class = "chatHistory">
						</div>
						<div class = "inputBox">
							<textarea id = "chatInput"></textarea>
							<input id = "sendBtn" type = "button" value = "SEND"/>
						</div>
					</div>
			</container>
		</div>
	</div>
</body>
</html> ] request

[ INFO: GET /pics/rubber-eraser.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: SEND ] pics/garbage.png

[ INFO: SEND ] pics/rubber-eraser.png

[ INFO: SEND ] request pics/rubber-eraser.png 		200

[ INFO: SEND ] request pics/garbage.png 		200

[ INFO: fd = 5 ] Accepted

[ INFO: fd = 9 ] Accepted

[ INFO: GET /pics/paint-brush.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

âOm‹väÈrï+¯Z|Z“æfÖt…Jâµ‚ö§≠ï.[©∞êk‚ìô§]c°tÈJÅ)úü §ÌS§ÀówFÒÖ¯4¶}¡(ÈÊõç‚S8ÿ∂Q∫ÑyfÆ¯Ù•—ÊJó—Eôt ] request

[ INFO: GET /css/font/Pangolin-Regular.ttf HTTP/1.1
Host: localhost
Connection: keep-alive
Origin: http://localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/css/font.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

Á$∞Ê·'⁄"$∑ñ∂ÇHhå¶-¬Iˆ&! ] request

[ INFO: SEND ] pics/paint-brush.png

[ INFO: SEND ] request pics/paint-brush.png 		200

[ INFO: fd = 5 ] Accepted

[ INFO: SEND ] css/font/Pangolin-Regular.ttf

[ INFO: GET /css/font/NotoSansKR-Light.otf HTTP/1.1
Host: localhost
Connection: keep-alive
Origin: http://localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/css/font.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

ÏÒd¸Ír˜Xº¡h|áÒ8ÿkøæØ\ÇO‚4~uÈ…˝"˜tƒb_åÔ¿¡›‹/cqGS<Ç2ﬂÃÔ`-˜Y‘I¿h¯h|∂&qøïEëéx˝]◊*«*ºã(√úòˇ·~-ã
IòÇb◊3¸Ÿ∏
Èﬂ∂ê)xj;˜´Yhz∫‹Âãb!ŒØ≥¿Î xv˜ÀY‰§·AÚhßv©ƒã8;F;√œ∆˝Çó‡∆/«lt¥ÙÇ†ŒÛ‹ØhëÇGU6~	ûD[a[â8 ®7ë˚5-±ÈÏ‚wˇ&Nˆ˙	Îˆ„~QK,n¿1eÛœE&Ÿﬁ¬C#ÓWµ‘•)^V6~~§‘ÊfA˝Oπ_÷Ró~ÿ•h¸
<à4•6/∂q˜ÎZjìàªïó|Î—Cπ›¬V⁄sø≤Â;N«*E„‚V[∏}ÖÌÿÉ†ìà!8§h˛•íÂ^,ñ	[˙˜K[™I√,E„Ök\∂›SÿV9~¿˝‚ ] request

[ INFO: SEND ] css/font/NotoSansKR-Light.otf

[ INFO: SEND ] request css/font/Pangolin-Regular.ttf 		200

[ INFO: SEND ] request css/font/NotoSansKR-Light.otf 		200

[ INFO: accept() ] connect

[ INFO: 01{"code":"01","msg":"„Öé„Öá","uid":null,"nickname":"ytw0728","timestamp":"2018-06-08T01:46:30.285Z"} ] receive message

[ INFO: 00{"prevX":477,"prevY":378,"x":477,"y":378,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":477,"prevY":378,"x":473,"y":370,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":473,"prevY":370,"x":461,"y":344,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":461,"prevY":344,"x":452,"y":306,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":452,"prevY":306,"x":450,"y":291,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":450,"prevY":291,"x":468,"y":255,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":468,"prevY":255,"x":497,"y":216,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":497,"prevY":216,"x":509,"y":209,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":509,"prevY":209,"x":521,"y":217,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":521,"prevY":217,"x":534,"y":249,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":534,"prevY":249,"x":533,"y":305,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":533,"prevY":305,"x":531,"y":342,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":531,"prevY":342,"x":531,"y":344,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":531,"prevY":344,"x":530,"y":345,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":530,"prevY":345,"x":529,"y":345,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":529,"prevY":345,"x":527,"y":346,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":527,"prevY":346,"x":525,"y":351,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":525,"prevY":351,"x":531,"y":344,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":339,"prevY":371,"x":339,"y":371,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":339,"prevY":371,"x":343,"y":369,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":343,"prevY":369,"x":360,"y":361,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":360,"prevY":361,"x":393,"y":353,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":393,"prevY":353,"x":428,"y":346,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":428,"prevY":346,"x":473,"y":332,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":473,"prevY":332,"x":507,"y":317,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":507,"prevY":317,"x":553,"y":294,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":553,"prevY":294,"x":593,"y":281,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":593,"prevY":281,"x":621,"y":273,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":621,"prevY":273,"x":633,"y":269,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":633,"prevY":269,"x":637,"y":267,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":637,"prevY":267,"x":637,"y":266,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":637,"prevY":266,"x":637,"y":265,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":637,"prevY":265,"x":637,"y":265,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":637,"prevY":265,"x":636,"y":264,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":636,"prevY":264,"x":625,"y":260,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":625,"prevY":260,"x":612,"y":259,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":612,"prevY":259,"x":559,"y":265,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":559,"prevY":265,"x":495,"y":285,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":495,"prevY":285,"x":445,"y":298,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":445,"prevY":298,"x":416,"y":307,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":416,"prevY":307,"x":381,"y":325,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":381,"prevY":325,"x":362,"y":329,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":362,"prevY":329,"x":349,"y":333,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":349,"prevY":333,"x":317,"y":345,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":317,"prevY":345,"x":310,"y":346,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":310,"prevY":346,"x":309,"y":341,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":309,"prevY":341,"x":309,"y":339,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":309,"prevY":339,"x":315,"y":335,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":315,"prevY":335,"x":328,"y":331,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":328,"prevY":331,"x":358,"y":311,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":358,"prevY":311,"x":390,"y":295,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":390,"prevY":295,"x":420,"y":283,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":420,"prevY":283,"x":451,"y":272,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":451,"prevY":272,"x":477,"y":263,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":477,"prevY":263,"x":516,"y":253,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":516,"prevY":253,"x":552,"y":248,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":552,"prevY":248,"x":569,"y":243,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":569,"prevY":243,"x":599,"y":237,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":599,"prevY":237,"x":613,"y":231,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":613,"prevY":231,"x":624,"y":227,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":624,"prevY":227,"x":628,"y":226,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":628,"prevY":226,"x":629,"y":226,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":629,"prevY":226,"x":631,"y":225,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":631,"prevY":225,"x":550,"y":266,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":550,"prevY":266,"x":535,"y":278,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":535,"prevY":278,"x":531,"y":281,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":531,"prevY":281,"x":526,"y":282,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":526,"prevY":282,"x":517,"y":286,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":517,"prevY":286,"x":509,"y":292,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":509,"prevY":292,"x":500,"y":300,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":500,"prevY":300,"x":467,"y":322,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":467,"prevY":322,"x":443,"y":337,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":443,"prevY":337,"x":414,"y":353,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":414,"prevY":353,"x":399,"y":362,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":399,"prevY":362,"x":370,"y":380,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":370,"prevY":380,"x":327,"y":408,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":327,"prevY":408,"x":313,"y":417,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":313,"prevY":417,"x":304,"y":425,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":304,"prevY":425,"x":286,"y":437,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":286,"prevY":437,"x":269,"y":452,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":269,"prevY":452,"x":265,"y":460,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":265,"prevY":460,"x":264,"y":465,"color":"#FC9C00","px":"9"} ] receive message

[ INFO: 00{"prevX":264,"prevY":465,"x":257,"y":469,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":257,"prevY":469,"x":247,"y":447,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":247,"prevY":447,"x":241,"y":438,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":241,"prevY":438,"x":237,"y":429,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":237,"prevY":429,"x":237,"y":426,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":237,"prevY":426,"x":238,"y":425,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":238,"prevY":425,"x":257,"y":401,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":257,"prevY":401,"x":280,"y":374,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":280,"prevY":374,"x":305,"y":353,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":305,"prevY":353,"x":341,"y":319,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":341,"prevY":319,"x":363,"y":305,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":363,"prevY":305,"x":393,"y":282,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":393,"prevY":282,"x":423,"y":261,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":423,"prevY":261,"x":449,"y":248,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":449,"prevY":248,"x":459,"y":243,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":459,"prevY":243,"x":461,"y":243,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":443,"prevY":259,"x":443,"y":259,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":443,"prevY":259,"x":443,"y":259,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":571,"prevY":441,"x":571,"y":441,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: 00{"prevX":571,"prevY":441,"x":571,"y":441,"color":"#FDFC06","px":"9"} ] receive message

[ INFO: fd = 9 ] Accepted

[ INFO: GET / HTTP/1.1
Host: localhost
Connection: keep-alive
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

∞B,∞9+ä  <∞#Bä8# .F∞%F∞CXPRYX <Y.±.+∞C.∞.+-∞C,∞ ] request

[ INFO: SEND ] index.html

[ INFO: SEND ] request index.html 		200

[ INFO: È ] receive message

[ INFO: 
 ] ws closed

[ INFO: fd = 5 ] Accepted

[ INFO: GET /css/font.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: SEND ] css/font.css

[ INFO: SEND ] request css/font.css 		200

[ INFO: fd = 5 ] Accepted

[ INFO: fd = 17 ] Accepted

[ INFO: fd = 18 ] Accepted

[ INFO: GET /css/index.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

otoSansKR-Light.otf');
}
@font-face{
	font-family: 'NotoSans_Medium';
	src: url('./font/NotoSansKR-Medium.otf');
}
@font-face{
	font-family: 'NotoSans_Regular';
	src: url('./font/NotoSansKR-Regular.otf');
}
@font-face{
	font-family: 'NotoSans_Thin-Windows';
	src: url('./font/NotoSansKR-Thin-Windows.otf');
}
@font-face{
	font-family: 'Pangolin';
	src: url('./font/Pangolin-Regular.ttf');
}



@media (max-width: 300px){html{font-size: 4vw;}}
@media (min-width:301px) and (max-width:400px){html{font-size:4vw;}}
@media (min-width:401px) and (max-width:500px){html{font-size:4vw;}}
@media (min-width:501px) and (max-width:600px){html{font-size:4vw;}}
@media (min-width:601px) and (max-width:700px){html{font-size:3vw;}}
@media (min-width:701px) and (max-width:800px){html{font-size:2vw;}} /* change to mobile*/
@media (min-width:801px) and (max-width:900px){html{font-size:2vw;}}
@media (min-width:901px) and (max-width:1024px){html{font-size:1.5vw;}}
@media (min-width:1025px) and (max-width:1330px){html{font-size:1.5vw;}}
@media (min-width:1331px) and (max-width:1800px){html{font-size:1vw;}}
@media (min-width:1801px) and (max-width:1979px){html{font-size:22px;}}
@media (min-width:1980px){ html{ font-size: 25px; } }
/*@media (min-width:2001px) and (max-width:2200px){html{font-size:1vw;}}
@media (min-width:2001px){html{font-size:1vw;}}
*/
SC@ ] request

[ INFO: GET /js/index.js HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

ext/css" href="/css/index.css">
	<script type = "text/javascript" src = "/js/index.js"></script>
</head>
<body>
	<div id = "wrap">
		<div id = "waiting">
			<header class = "waitingHeader"><a href = "/">DOODLE</a></header>
			<container id = "waitingBoard">
				<div class = "nicknameInputBox">
					<label for="nickname">Nickname | </label><input type="text" placeholder="Type your nickname" id="nickname"/>
					<button onclick = "statusManager.userAdd(event)">Play</button>
				</div>
				<div class = "roomLists">
					<span id="prevBtn" onclick="waiting.prev(event)">&lt;</span>
					<span id="nextBtn" onclick="waiting.next(event)">&gt;</span>
					<ul class ="rooms">
						
					</ul>
					<span class = "makeRoomBtn" onclick="statusManager.makeRoom(event)">
						Make Room!
					</span>
					<span class = "reFreshRoomBtn" onclick="statusManager.refreshRoomList(event)"></span>
				</div>
				<div class = "waitingRoom">
					<span class="title">WAITING ROOM</span>
					<ul class = "waitingMembers">
					</ul>
					<div class = "waitingRoomBtns" >
						<span class="exitRoom" onclick="statusManager.exitRoom(event)" >EXIT</span>
						<span class="gameStart" onclick="statusManager.enterGameRoom(event)" >START!</span>
					</div>
				</div>
			</container>
		</div>
		<div id = "app">
			<header><a href = "/">DOODLE</a><div class = "answer"></div><div class = "clock">60.00</div></header>
			<container id = "main">
					<div id = "userBox">
						<ul class = "users">
							<li class = "user">
								<span>
									User01
								</span>
							</li>
							<li class = "user">
								<span>
									User02
								</span>
							</li>
							<li class = "user">
								<span>
									User03
								</span>
							</li>
						</ul>
						<span class = "exitGameRoom" onclick="statusManager.exitGameRoom(event)">EXIT</span>
					</div>
					<div id = "playBoard">
						<div id = "canvasBox">
							<canvas id = "canvas">Ïù¥ Î∏åÎùºÏö∞Ï†ÄÎäî canvas ÌÉúÍ∑∏Î•º ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.</canvas>
						</div>
						<div id = "toolBox">
							<div id = "colorBox">
								<ul id = "colors">
									<li class = "color" data-color="#ffffff" ></li>
									<li class = "color" data-color="#000000" ></li>
									<li class = "color" data-color="#FE1B02" ></li>
									<li class = "color" data-color="#FC9C00" ></li>
									<li class = "color" data-color="#FDFC06" ></li>
									<li class = "color" data-color="#01FE02" ></li>
									<li class = "color" data-color="#005FFF" ></li>
									<li class = "color" data-color="#0212FF" ></li>
									<li class = "color" data-color="#FF00FB" ></li>
								</ul>
							</div>
							<div id = "brushBox">
								<ul id = "brushs">
									<li class = "pencil"></li>
									<li class = "eraser"></li>
									<li class = "brush" data-px = "3"><span></span></li>
									<li class = "brush" data-px = "6"><span></span></li>
									<li class = "brush" data-px = "9"><span></span></li>
									<li class = "brush" data-px = "12"><span></span></li>
									<li class = "clear"></li>
								</ul>
							</div>
						</div>
					</div> 
					<div id = "chat">
						<div class = "chatHistory">
						</div>
						<div class = "inputBox">
							<textarea id = "chatInput"></textarea>
							<input id = "sendBtn" type = "button" value = "SEND"/>
						</div>
					</div>
			</container>
		</div>
	</div>
</body>
</html>42Euni042Funi0402uni0462uni046Auni0472uni0474uni0492uni0494uni0496uni0498uni049Auni049Cuni04A0uni04A2uni04A4uni0524uni04AAuni04AEuni04B0uni04B6uni04B8uni04BAuni04C0uni04C1uni04CBuni04D0uni04D2uni04D4uni04D6uni04D8uni04DCuni04DEuni04E2uni04E4uni04E6uni04E8uni04EEuni04F0uni04F2uni04F4uni04F6uni04F8uni051Auni051Cuni0430uni0431uni0432uni0433uni0453uni0491uni0434uni0435uni0450uni0451uni0436uni0437uni0438uni0439uni045Duni043Auni045Cuni043Buni043Cuni043Duni043Euni043Funi0440uni0441uni0442uni0443uni045Euni0444uni0445uni0447uni0446uni0448uni0449uni045Funi044Cuni044Auni044Buni0459uni045Auni0455uni0454uni044Duni0456uni0457uni0458uni045Buni044Euni044Funi0452uni0463uni046Buni0473uni0475uni0493uni0495uni0497uni0499uni049Buni049Duni04A1uni04A3uni04A5uni0525uni04ABuni04AFuni04B1uni04B7uni04B9uni04BBuni04CFuni04C2uni04CCuni04D1uni04D3uni04D5uni04D7uni04D9uni04DDuni04DFuni04E3uni04E5uni04E7uni04E9uni04EFuni04F1uni04F3uni04F5uni04F7uni04F9uni051Buni051Dzero.lfone.lftwo.lfthree.lffour.lffive.lfsix.lfseven.lfeight.lfnine.lfuni2080uni2081uni2082uni2083uni2084uni2085uni2086uni2087uni2088uni2089uni2070uni00B9uni00B2uni00B3uni2074uni2075uni2076uni2077uni2078uni2079periodcentered.loclCAT
figuredashuni2015uni00ADuni2010uni2007uni200Auni2008uni2009uni200Buni20B5colonmonetarydongEurouni20B2uni20B4uni20ADlirauni20BAuni20BCuni20A6pesetauni20B1uni20BDuni20B9uni20B8uni20AEuni20A9uni2219uni2215emptysetuni2126uni2206uni00B5uni2113uni2116	estimatedminuteseconduni0308uni0307	gravecomb	acutecombuni030Bcaroncomb.altuni0302uni030Cuni0306uni030A	tildecombuni0304hookabovecombuni030Funi0311uni0312uni031Bdotbelowcombuni0324uni0326uni0327uni0328uni032Euni0331uni0335uni0337uni0338uni02BCuni02BBuni02BAuni02C9uni02CBuni02B9uni02BFuni02BEuni02CAuni02CCuni02C8brevecombcydescendercydescendercy.caseuni03060301uni03060300uni03060309uni03060303uni03020301uni03020300uni03020309uni03020303verticalbarcyverticalbarcy.caseuni00A0 ] request

[ INFO: SEND ] js/index.js

[ INFO: SEND ] css/index.css

[ INFO: SEND ] request js/index.js 		200

[ INFO: SEND ] request css/index.css 		200

[ INFO: GET /pics/garbage.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

tag = document.getElementById("canvas");
		this.tag.width = this.tag.offsetWidth;
		this.tag.height = this.tag.offsetHeight;

		canvas.addEventListener("mousedown", this.mouseHandle.bind(this));
		canvas.addEventListener("mousemove", this.mouseHandle.bind(this));
		canvas.addEventListener("mouseup", this.mouseHandle.bind(this));
		this.canvas = this.tag.getContext("2d");
		
		this.brushType = true;
		this.color = "#000000";
		this.canvas.fillStyle = this.color;
        this.canvas.strokeStyle = this.color;

        this.px = 3;
        this.canvas.lineWidth = this.px;
        this.canvas.lineCap = "round";
        this.canvas.lineJoin = "round";

		this.prevX = this.prevY = 0;
		this.x = this.y = 0;

		this.initEvent();
		this.prepareToDraw();
	}

	initEvent(){
		this.colors = document.getElementsByClassName("color");
		for( let i = 0 ; i < this.colors.length ; i++){
			this.colors[i].addEventListener("click", this.colorChange.bind(this));
			this.colors[i].style.background = this.colors[i].getAttribute("data-color");
		}

		
		this.brush = document.getElementsByClassName("brush");
		for( let i = 0 ; i < this.brush.length ; i++){
			this.brush[i].addEventListener("click", this.brushChange.bind(this));
			this.brush[i].children[0].style.width = this.brush[i].getAttribute("data-px") + "px";
			this.brush[i].children[0].style.height = this.brush[i].getAttribute("data-px") + "px";
			this.brush[i].children[0].style.borderRadius = this.brush[i].getAttribute("data-px")/2 + 2 + "px";
		}
		

		this.pencil = document.getElementsByClassName("pencil")[0];
		this.pencil.addEventListener("click", this.setPencil.bind(this));
		

		this.eraser = document.getElementsByClassName("eraser")[0];
		this.eraser.addEventListener("click", this.setEraser.bind(this));

		let clear = document.getElementsByClassName("clear")[0];
		clear.addEventListener("click", this.clearCanvas.bind(this));
	}

	prepareToDraw(){
		if( !isPainter ) return;
		this.colors[1].style.backgroundBlendMode="darken";
		this.colors[1].style.className = "color on";

		this.brush[0].style.background = "#D2EAFF";

		this.pencil.style.backgroundColor = "#ccc";
	}

	mouseHandle(event){
		event.preventDefault();
		if( !isPainter ) return;
		if( this.flag ){
			if( this.locked ) return;
			this.locked = true;
			setTimeout(() => this.locked = false, 20);
		}
		if( event.type == "mousedown"){
			this.flag = true;
			let position = this.getMousePos(event);
			this.prevX = this.x = position.x;
			this.prevY = this.y = position.y;
			this.draw();
		}
		else if( this.flag && event.type == "mousemove"){
			if( this.flag ){
				let position = this.getMousePos(event);
				this.prevX = this.x;
				this.prevY = this.y;
				this.x = position.x;
				this.y = position.y;
				this.draw();
			}
		}
		else if( event.type == "mouseup"){
			this.flag = false;
			let position = this.getMousePos(event);
			this.prevX = this.x;
			this.prevY = this.y;
			this.x = position.x;
			this.y = position.y;
			this.draw();
		}
		
	}

	getMousePos(evt) {
		let rect = this.tag.getBoundingClientRect();
		return {
			x: evt.offsetX,
			y: evt.offsetY
		};
  	}

  	draw(){
        this.canvas.beginPath();
        this.canvas.moveTo(this.prevX,this.prevY);
        this.canvas.lineTo(this.x, this.y);
        this.canvas.stroke();

        this.sendDrawingPoint();
  	}

  	drawWithJson(){
  		if( isPainter ) return;

  	}
  	sendDrawingPoint(){
  		if( !isPainter ) return;
  		let msg = "00";
  		let jsonObject = {
  			prevX : this.prevX,
  			prevY : this.prevY,
  			x : this.x,
  			y : this.y,
  			color : this.color,
  			px : this.px
  		}

  		msg += JSON.stringify(jsonObject);
  		ws.send(msg);
  	}

  	colorChange(event){
  		if( !isPainter ) return;
  		let target = event.target;
  		if( !target.hasAttribute("data-color") ) target = target.parentNode;

  		let color = target.getAttribute("data-color");
		this.canvas.fillStyle = this.canvas.strokeStyle = this.color = color;

		for(let i = 0; i< this.colors.length; i++){
			this.colors[i].style.backgroundBlendMode = "normal";
			this.colors[i].className = "color";
		}
		target.style.backgroundBlendMode = "darken";
		target.className = "color on";
		this.setPencil();
  	}

  	brushChange(event){
  		if( !isPainter ) return;
  		event.preventDefault();
  		let target = event.target;
  		if( !target.hasAttribute("data-px") )target = target.parentNode;

  		this.px = target.getAttribute("data-px");
  		this.canvas.lineWidth = this.px;

  		for( let i = 0 ; i < this.brush.length; i++){
  			this.brush[i].style.background = "none";
  		}

  		target.style.background = "#D2EAFF";
  	}
  	setPencil(event){
  		if( !isPainter ) return;
  		this.brushType = true;
  		this.canvas.fillStyle = this.color;
  		this.canvas.strokeStyle = this.color;
		this.eraser.style.backgroundColor = "#fff";
		this.pencil.style.backgroundColor = "#ccc";
  	}
  	setEraser(event){
  		if( !isPainter ) return;
  		this.brushType = false;
		this.canvas.fillStyle = "#ffffff";
        this.canvas.strokeStyle = "#ffffff";
        this.pencil.style.backgroundColor = "#fff";
        this.eraser.style.backgroundColor = "#ccc";
  	}
  	clearCanvas(event){
  		this.canvas.clearRect(0, 0, this.tag.clientWidth, this.tag.clientHeight);
  	}
}



class Websocket{
	constructor(){
		this.ws = new WebSocket("ws://localhost:12345");
		this.ws.onopen = function (event) {
			console.log("ws connected");
		};
		this.ws.onmessage = function (event){

			let packet = event.data;

			// let tmp = event.data.replace(/(?:\r\n|\n|\r)/g, '<br/>'); // dummyData
			// let packet = '01{"code":"00","msg":"'+tmp+'","uid":1,"nickname":"someone","timestamp":"'+new Date()+'"}';
			let code = packet.substring(0,2);
			let json = packet.substring(2,packet.length);
			let jsonObject = JSON.parse(json);

			if( code === "01" ){ // message
				chat.addMsg(jsonObject);
				return;
			}
			if( code == "00"){
				draw.drawWithJson(jsonObject);
			}
			if( code === "23"){
				notice.showAnswerLen(jsonObject);
				return;
			}
		}
		this.ws.onclose = function(event) {
			console.log("ws close");
		    setTimeout(() => {
		    	ws = new Websocket();
		    	if( status != 0 ){
		    		console.log("reconnect ws");
		    		if( status == 1 ) statusManager.exitRoom();
		    		else if( status == 2 ) statusManager.exitGameRoom();
		    	}
			}, 500);
		};
		this.ws.onerror = function(event){
			// this.ws.close();
			console.log("ws catched error");
		}
	}

	send(msg){
		this.ws.send(msg);
	}
}
			this.answer.innerHTML += "_ ";
		}
	}
}

class Chatting{
	constructor(){
		this.chatHistory = document.getElementsByClassName("chatHistory")[0];
		this.initEvent();
	}
	addMsg(jsonObject){
		this.chatHistory.innerHTML += "\
			<div class = 'msg'>\
				<span class = 'sender'>"
					+ jsonObject.nickname  + " | " + 
				"</span>\
				<span class = 'contents'>"
				 + jsonObject.msg + 
				"</span>\
			</div>";
		this.chatHistory.scrollTop = this.chatHistory.scrollHeight;
	}

	initEvent(){
		let chatInput = document.getElementById("chatInput");
		let sendBtn = document.getElementById("sendBtn");

		sendBtn.addEventListener("click", this.sendMessage);
		chatInput.addEventListener("keydown", this.keyPressHandle.bind(this));
	}
	sendMessage(event){
		event.preventDefault();
		let box = document.getElementById("chatInput");
		if( box.value == "" ) return;		
		let msg = "01";
		7Ù ] request

[ INFO: SEND ] pics/garbage.png

[ INFO: SEND ] request pics/garbage.png 		200

[ INFO: fd = 17 ] Accepted

[ INFO: fd = 18 ] Accepted

[ INFO: GET /pics/rubber-eraser.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

m‹väÈrï+¯Z|Z“æfÖt…Jâµ‚ö§≠ï.[©∞êk‚ìô§]c°tÈJÅ)úü §ÌS§ÀówFÒÖ¯4¶}¡(ÈÊõç‚S8ÿ∂Q∫ÑyfÆ¯Ù•—ÊJó—Eôt ] request

[ INFO: fd = 22 ] Accepted
[ INFO: GET /pics/paint-brush.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

rgin-right: .3rem;
	}
		container#main > div#playBoard > div#canvasBox{
			width: 100%;
			height: 80%;
			background: white;

			border: .1rem solid #000000;
			border-radius: .3rem;
		}
			container#main > div#playBoard > div#canvasBox > canvas#canvas{
				width: 100%;
				height: 100%;
			}
		container#main > div#playBoard > div#toolBox{
			width: 98%;
			margin: 1%;
			height: 19%;
		}
			container#main > div#playBoard > div#toolBox > div{
				width: 100%;
				height: 50%;
			}
			container#main > div#playBoard > div#toolBox > div#colorBox{
				/*background: red;*/
			}
				container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors{
					display: inline-block;
					width: 100%;
					height: 100%;
					list-style: none;
					text-align: left;
				}
					container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors > li{
						display: inline-block;
						width: 2rem;
						height: 2rem;
						border : .1rem solid black;
						border-radius: 1rem;
						margin-right: 1rem;
						cursor: pointer;
						position: relative;
					}
					container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors > li.on:after{
						content:'';
						position: absolute;
						width: 100%;
						height: 100%;
						top: 0;
						left: 0;
						border-radius: 1rem;
						background: black;
						opacity:.3;
					}

			container#main > div#playBoard > div#toolBox > div#brushBox{
				/*background: yellow;*/
			}			
				container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs{
					display: inline-block;
					width: 100%;
					height: 100%;
					list-style: none;
					text-align: left;
				}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li{
						display: inline-block;
						margin-right: .5rem;
						width: 2rem;
						height: 2rem;
						line-height: 2rem;
						background: white;
						cursor: pointer;
						background-size: 80% 80%;
						background-repeat: no-repeat;
						background-position: 50% 50%;
						margin-right: 2rem;
						vertical-align: middle;
						border: .1rem solid #333;
						border-radius: .3rem;
						text-align: center;

					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.pencil{
						background-image: url("../pics/paint-brush.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.eraser{
						background-image: url("../pics/rubber-eraser.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.clear{
						background-image: url("../pics/garbage.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li > span{
						display: inline-block;
						background: black;
						vertical-align: middle;
					}

	container#main > div#chat{
		position: relative;
		display: inline-block;
		width: 33%;
		min-height: 100%;
		border: .1rem solid #000000;
		border-radius: .3rem;	
	}
		container#main > div#chat > div.chatHistory{
			position: relative;
			display: inline-block;
			
			width: 90%;
			height: 90%;
			padding: 5%;
			padding-bottom: 0;


			overflow-y: auto;
			overflow-x: hidden;

			top : 0;
			left : 0;

			text-align: left;
		
		}
			container#main > div#chat > div.chatHistory > div.msg{
				display: inline-block;
				width: 90%;
				margin: 2%;
				padding : .2rem;

			}
				container#main > div#chat > div.chatHistory > div.msg > span.sender{
					display: inline-block;
					width: 100%;
					height: 2rem;
					font-weight: bold;
				}
				container#main > div#chat > div.chatHistory > div.msg > span.contents{
					display: inline-block;
					width: 100%;
				}

			container#main > div#chat > div.inputBox{
				position: absolute;
				display: inline-block;
				width: 100%;
				height: 3rem;

				bottom : 0;
				left : 0;
				font-size : 0;
				

				background: #333;
				border-top: .1rem solid #333;
			}
				container#main > div#chat > div.inputBox > * {
					font-size: 1rem;
				}

				container#main > div#chat > div.inputBox > textarea#chatInput{
					padding: 0;
					margin : 0;
					resize : none;

					display: inline-block;
					width: 70%;
					padding-left: 5%;
					padding-right: 5%;
					white-space: nowrap;
					overflow: hidden;
					height: 2rem;
					line-height: 2rem;
					font-size: 1.2rem;
					margin-top: .5rem;
					vertical-align: top;
					border-radius : 2rem;
					
					font-family : "NotoSans_Light";
				}
				container#main > div#chat > div.inputBox > textarea#chatInput:focus{
					outline:none;
				}

				container#main > div#chat > div.inputBox > input[type=button]{
					display: inline-block;
					width: calc(15% - .3rem);
					margin-left: 2%;
					height: 2.2rem;
					vertical-align: top;
					margin-top: .5rem;

					border: .1rem solid #999;					
					border-radius: 1rem;
					outline: none;
					font-family: "Pangolin";
					color: #fff;
					background: #333;
					cursor: pointer;
					transition: background .1s ease;
				}
				container#main > div#chat > div.inputBox > input[type=button]:hover{
					background: #505050;
				}




tingRoom > div.waitingRoomBtns{
		display: block;
		margin: 0 auto;
		width: 25%;
	}
		div#waiting > container#waitingBoard > div.waitingRoom > div.waitingRoomBtns > span{
			display: inline-block;
			width: 45%;
			height: 3rem;
			line-height: 3rem;
			background: #fff;
			color: #333;
			border-radius: 1rem;
			border: .1rem solid #333;

			margin-right: 2%;

			transition: background .3s ease;
			cursor: pointer;
		}
		div#waiting > container#waitingBoard > div.waitingRoom > div.waitingRoomBtns > span:hover{
			background: #333;
			color: #fff;
		}


header{
	text-align: left;
	display: inline-block;
	margin-top: 2rem;
	width: 95%;
	height: 3rem;
	line-height: 3rem;
	font-size: 2rem;
	font-family: "Pangolin";

	border: .1rem solid #000000;
	border-radius: 1rem;
}
header::selection{
	background: none;
	color: black;
}
	header > a{
		width: 10%;
		display: inline-block;
		margin-left: 2rem;
		color: #333;
		text-decoration: none;
	}
	header > a:hover, header > a:visited, header > a:linked, header > a:active{
		color: #333;
		text-decoration: none;
	}
	header > div{
		display: inline-block;
		font-size: 1.5rem;
	}

	header > div.answer{
		width: 78%;
		text-align: center;
		font-size: 2rem;


	}
	header > div.clock{
		width: 8%;
	}

container#main{
	display: inline-block;
	max-width: 1920px;
	width: 100%;
	min-height: 80vh;
	height: 80vh;
	overflow: visible;
	text-align: center;
	font-size: 0;
}
	container#main > * {
		font-size: 1rem;
		vertical-align: top;
		height: 100%;
	}

	container#main > div#userBox{
		display: inline-block;	
		width: 13%;
		height: auto;
		overflow: auto;
		max-height: 100%;
	}
	container#main > div#userBox > span.exitGameRoom{
		display: inline-block;
		width: 8rem;
		height: 4rem
		line-height: 4rem;
		font-size: 1.5rem;
		background: #333;

		font-family: "Pangolin";

		color: #fff;
		border: .1rem solid #333;
		border-radius: .5rem;
		cursor: pointer;

		transition: background .3s ease;
	}
	container#main > div#userBox > span.exitGameRoom:hover{
		background: #fff;
		color: #333;
	}
		container#main > div#userBox > ul.users{
			display: inline-block;
			width: 90%;
			height: auto;
			padding: 4%;
			border: .1rem solid #000000;
			border-radius: .3rem;
		7Ù ] request


[ INFO: SEND ] pics/rubber-eraser.png

[ INFO: SEND ] pics/paint-brush.png

[ INFO: fd = 23 ] Accepted

[ INFO: GET /css/font/Pangolin-Regular.ttf HTTP/1.1
Host: localhost
Connection: keep-alive
Origin: http://localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/css/font.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

g = document.getElementById("canvas");
		this.tag.width = this.tag.offsetWidth;
		this.tag.height = this.tag.offsetHeight;

		canvas.addEventListener("mousedown", this.mouseHandle.bind(this));
		canvas.addEventListener("mousemove", this.mouseHandle.bind(this));
		canvas.addEventListener("mouseup", this.mouseHandle.bind(this));
		this.canvas = this.tag.getContext("2d");
		
		this.brushType = true;
		this.color = "#000000";
		this.canvas.fillStyle = this.color;
        this.canvas.strokeStyle = this.color;

        this.px = 3;
        this.canvas.lineWidth = this.px;
        this.canvas.lineCap = "round";
        this.canvas.lineJoin = "round";

		this.prevX = this.prevY = 0;
		this.x = this.y = 0;

		this.initEvent();
		this.prepareToDraw();
	}

	initEvent(){
		this.colors = document.getElementsByClassName("color");
		for( let i = 0 ; i < this.colors.length ; i++){
			this.colors[i].addEventListener("click", this.colorChange.bind(this));
			this.colors[i].style.background = this.colors[i].getAttribute("data-color");
		}

		
		this.brush = document.getElementsByClassName("brush");
		for( let i = 0 ; i < this.brush.length ; i++){
			this.brush[i].addEventListener("click", this.brushChange.bind(this));
			this.brush[i].children[0].style.width = this.brush[i].getAttribute("data-px") + "px";
			this.brush[i].children[0].style.height = this.brush[i].getAttribute("data-px") + "px";
			this.brush[i].children[0].style.borderRadius = this.brush[i].getAttribute("data-px")/2 + 2 + "px";
		}
		

		this.pencil = document.getElementsByClassName("pencil")[0];
		this.pencil.addEventListener("click", this.setPencil.bind(this));
		

		this.eraser = document.getElementsByClassName("eraser")[0];
		this.eraser.addEventListener("click", this.setEraser.bind(this));

		let clear = document.getElementsByClassName("clear")[0];
		clear.addEventListener("click", this.clearCanvas.bind(this));
	}

	prepareToDraw(){
		if( !isPainter ) return;
		this.colors[1].style.backgroundBlendMode="darken";
		this.colors[1].style.className = "color on";

		this.brush[0].style.background = "#D2EAFF";

		this.pencil.style.backgroundColor = "#ccc";
	}

	mouseHandle(event){
		event.preventDefault();
		if( !isPainter ) return;
		if( this.flag ){
			if( this.locked ) return;
			this.locked = true;
			setTimeout(() => this.locked = false, 20);
		}
		if( event.type == "mousedown"){
			this.flag = true;
			let position = this.getMousePos(event);
			this.prevX = this.x = position.x;
			this.prevY = this.y = position.y;
			this.draw();
		}
		else if( this.flag && event.type == "mousemove"){
			if( this.flag ){
				let position = this.getMousePos(event);
				this.prevX = this.x;
				this.prevY = this.y;
				this.x = position.x;
				this.y = position.y;
				this.draw();
			}
		}
		else if( event.type == "mouseup"){
			this.flag = false;
			let position = this.getMousePos(event);
			this.prevX = this.x;
			this.prevY = this.y;
			this.x = position.x;
			this.y = position.y;
			this.draw();
		}
		
	}

	getMousePos(evt) {
		let rect = this.tag.getBoundingClientRect();
		return {
			x: evt.offsetX,
			y: evt.offsetY
		};
  	}

  	draw(){
        this.canvas.beginPath();
        this.canvas.moveTo(this.prevX,this.prevY);
        this.canvas.lineTo(this.x, this.y);
        this.canvas.stroke();

        this.sendDrawingPoint();
  	}

  	drawWithJson(){
  		if( isPainter ) return;

  	}
  	sendDrawingPoint(){
  		if( !isPainter ) return;
  		let msg = "00";
  		let jsonObject = {
  			prevX : this.prevX,
  			prevY : this.prevY,
  			x : this.x,
  			y : this.y,
  			color : this.color,
  			px : this.px
  		}

  		msg += JSON.stringify(jsonObject);
  		ws.send(msg);
  	}

  	colorChange(event){
  		if( !isPainter ) return;
  		let target = event.target;
  		if( !target.hasAttribute("data-color") ) target = target.parentNode;

  		let color = target.getAttribute("data-color");
		this.canvas.fillStyle = this.canvas.strokeStyle = this.color = color;

		for(let i = 0; i< this.colors.length; i++){
			this.colors[i].style.backgroundBlendMode = "normal";
			this.colors[i].className = "color";
		}
		target.style.backgroundBlendMode = "darken";
		target.className = "color on";
		this.setPencil();
  	}

  	brushChange(event){
  		if( !isPainter ) return;
  		event.preventDefault();
  		let target = event.target;
  		if( !target.hasAttribute("data-px") )target = target.parentNode;

  		this.px = target.getAttribute("data-px");
  		this.canvas.lineWidth = this.px;

  		for( let i = 0 ; i < this.brush.length; i++){
  			this.brush[i].style.background = "none";
  		}

  		target.style.background = "#D2EAFF";
  	}
  	setPencil(event){
  		if( !isPainter ) return;
  		this.brushType = true;
  		this.canvas.fillStyle = this.color;
  		this.canvas.strokeStyle = this.color;
		this.eraser.style.backgroundColor = "#fff";
		this.pencil.style.backgroundColor = "#ccc";
  	}
  	setEraser(event){
  		if( !isPainter ) return;
  		this.brushType = false;
		this.canvas.fillStyle = "#ffffff";
        this.canvas.strokeStyle = "#ffffff";
        this.pencil.style.backgroundColor = "#fff";
        this.eraser.style.backgroundColor = "#ccc";
  	}
  	clearCanvas(event){
  		this.canvas.clearRect(0, 0, this.tag.clientWidth, this.tag.clientHeight);
  	}
}



class Websocket{
	constructor(){
		this.ws = new WebSocket("ws://localhost:12345");
		this.ws.onopen = function (event) {
			console.log("ws connected");
		};
		this.ws.onmessage = function (event){

			let packet = event.data;

			// let tmp = event.data.replace(/(?:\r\n|\n|\r)/g, '<br/>'); // dummyData
			// let packet = '01{"code":"00","msg":"'+tmp+'","uid":1,"nickname":"someone","timestamp":"'+new Date()+'"}';
			let code = packet.substring(0,2);
			let json = packet.substring(2,packet.length);
			let jsonObject = JSON.parse(json);

			if( code === "01" ){ // message
				chat.addMsg(jsonObject);
				return;
			}
			if( code == "00"){
				draw.drawWithJson(jsonObject);
			}
			if( code === "23"){
				notice.showAnswerLen(jsonObject);
				return;
			}
		}
		this.ws.onclose = function(event) {
			console.log("ws close");
		    setTimeout(() => {
		    	ws = new Websocket();
		    	if( status != 0 ){
		    		console.log("reconnect ws");
		    		if( status == 1 ) statusManager.exitRoom();
		    		else if( status == 2 ) statusManager.exitGameRoom();
		    	}
			}, 500);
		};
		this.ws.onerror = function(event){
			// this.ws.close();
			console.log("ws catched error");
		}
	}

	send(msg){
		this.ws.send(msg);
	}
}
			this.answer.innerHTML += "_ ";
		}
	}
}

class Chatting{
	constructor(){
		this.chatHistory = document.getElementsByClassName("chatHistory")[0];
		this.initEvent();
	}
	addMsg(jsonObject){
		this.chatHistory.innerHTML += "\
			<div class = 'msg'>\
				<span class = 'sender'>"
					+ jsonObject.nickname  + " | " + 
				"</span>\
				<span class = 'contents'>"
				 + jsonObject.msg + 
				"</span>\
			</div>";
		this.chatHistory.scrollTop = this.chatHistory.scrollHeight;
	}

	initEvent(){
		let chatInput = document.getElementById("chatInput");
		let sendBtn = document.getElementById("sendBtn");

		sendBtn.addEventListener("click", this.sendMessage);
		chatInput.addEventListener("keydown", this.keyPressHandle.bind(this));
	}
	sendMessage(event){
		event.preventDefault();
		let box = document.getElementById("chatInput");
		if( box.value == "" ) return;		
		let msg = "01";
		7Ù ] request

[ INFO: SEND ] request pics/rubber-eraser.png 		200

[ INFO: SEND ] css/font/Pangolin-Regular.ttf

[ INFO: GET /css/font/NotoSansKR-Light.otf HTTP/1.1
Host: localhost
Connection: keep-alive
Origin: http://localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/css/font.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7


	font-family: 'NotoSans_Medium';
	src: url('./font/NotoSansKR-Medium.otf');
}
@font-face{
	font-family: 'NotoSans_Regular';
	src: url('./font/NotoSansKR-Regular.otf');
}
@font-face{
	font-family: 'NotoSans_Thin-Windows';
	src: url('./font/NotoSansKR-Thin-Windows.otf');
}
@font-face{
	font-family: 'Pangolin';
	src: url('./font/Pangolin-Regular.ttf');
}



@media (max-width: 300px){html{font-size: 4vw;}}
@media (min-width:301px) and (max-width:400px){html{font-size:4vw;}}
@media (min-width:401px) and (max-width:500px){html{font-size:4vw;}}
@media (min-width:501px) and (max-width:600px){html{font-size:4vw;}}
@media (min-width:601px) and (max-width:700px){html{font-size:3vw;}}
@media (min-width:701px) and (max-width:800px){html{font-size:2vw;}} /* change to mobile*/
@media (min-width:801px) and (max-width:900px){html{font-size:2vw;}}
@media (min-width:901px) and (max-width:1024px){html{font-size:1.5vw;}}
@media (min-width:1025px) and (max-width:1330px){html{font-size:1.5vw;}}
@media (min-width:1331px) and (max-width:1800px){html{font-size:1vw;}}
@media (min-width:1801px) and (max-width:1979px){html{font-size:22px;}}
@media (min-width:1980px){ html{ font-size: 25px; } }
/*@media (min-width:2001px) and (max-width:2200px){html{font-size:1vw;}}
@media (min-width:2001px){html{font-size:1vw;}}
*/
 ] request
[ INFO: SEND ] request pics/paint-brush.png 		200


[ INFO: SEND ] css/font/NotoSansKR-Light.otf

[ INFO: SEND ] request css/font/Pangolin-Regular.ttf 		200

[ INFO: SEND ] request css/font/NotoSansKR-Light.otf 		200

[ INFO: accept() ] connect

[ INFO: 00{"prevX":387,"prevY":442,"x":389,"y":425,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":389,"prevY":425,"x":401,"y":389,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":401,"prevY":389,"x":409,"y":353,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":409,"prevY":353,"x":412,"y":334,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":412,"prevY":334,"x":412,"y":333,"color":"#000000","px":3} ] receive message

[ INFO: fd = 23 ] Accepted

[ INFO: fd = 25 ] Accepted

[ INFO: GET /css/font.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

+-∞@,# .F∞%F∞CXPRYX <Y# .F∞%F∞CXRPYX <Y.±.+-∞A,∞8+# .F∞%F∞CXPRYX <Y.±.+-∞B,∞9+ä  <∞#Bä8# .F∞%F∞CXPRYX <Y.±.+∞C.∞.+-∞C,∞ ] request

[ INFO: SEND ] css/font.css

[ INFO: SEND ] request css/font.css 		200

[ INFO: GET /css/index.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

ÖÛπªkÒèÆ¡E”◊î˝8Öª€?H¡hlsi¸Í≤‹.æÔ4¬dÏÒd¸Ír˜Xº¡h|áÒ8ÿkøæØ\ÇO‚4~uÈ…˝"˜tƒb_åÔ¿¡›‹/cqGS<Ç2ﬂÃÔ`-˜Y‘I¿h¯h|∂&qøïEëéx˝]◊*«*ºã(√úòˇ·~-ã
IòÇb◊3¸Ÿ∏
Èﬂ∂ê)xj;˜´Yhz∫‹Âãb!ŒØ≥¿Î xv˜ÀY‰§·AÚhßv©ƒã8;F;√œ∆˝Çó‡∆/«lt¥ÙÇ†ŒÛ‹ØhëÇGU6~	ûD[a[â8 ®7ë˚5-±ÈÏ‚wˇ&Nˆ˙	Îˆ„~QK,n¿1eÛœE&Ÿﬁ¬C#ÓWµ‘•)^V6~~§‘ÊfA˝Oπ_÷Ró~ÿ•h¸
<à4•6/∂q˜ÎZjìàªïó|Î—Cπ›¬V⁄sø≤Â;N«*E„‚V[∏}ÖÌÿÉ†ìà!8§h˛•íÂ^,ñ	[˙˜K[™I√,E„Ök\∂›SÿV9~¿˝‚ ] request

[ INFO: SEND ] css/index.css

[ INFO: SEND ] request css/index.css 		200

[ INFO: fd = 25 ] Accepted

[ ERROR ] failed to read browser request ( point : web() )

[ INFO: fd = 25 ] Accepted

[ INFO: GET / HTTP/1.1
Host: localhost
Connection: keep-alive
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

Box{
			width: 100%;
			height: 80%;
			background: white;

			border: .1rem solid #000000;
			border-radius: .3rem;
		}
			container#main > div#playBoard > div#canvasBox > canvas#canvas{
				width: 100%;
				height: 100%;
			}
		container#main > div#playBoard > div#toolBox{
			width: 98%;
			margin: 1%;
			height: 19%;
		}
			container#main > div#playBoard > div#toolBox > div{
				width: 100%;
				height: 50%;
			}
			container#main > div#playBoard > div#toolBox > div#colorBox{
				/*background: red;*/
			}
				container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors{
					display: inline-block;
					width: 100%;
					height: 100%;
					list-style: none;
					text-align: left;
				}
					container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors > li{
						display: inline-block;
						width: 2rem;
						height: 2rem;
						border : .1rem solid black;
						border-radius: 1rem;
						margin-right: 1rem;
						cursor: pointer;
						position: relative;
					}
					container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors > li.on:after{
						content:'';
						position: absolute;
						width: 100%;
						height: 100%;
						top: 0;
						left: 0;
						border-radius: 1rem;
						background: black;
						opacity:.3;
					}

			container#main > div#playBoard > div#toolBox > div#brushBox{
				/*background: yellow;*/
			}			
				container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs{
					display: inline-block;
					width: 100%;
					height: 100%;
					list-style: none;
					text-align: left;
				}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li{
						display: inline-block;
						margin-right: .5rem;
						width: 2rem;
						height: 2rem;
						line-height: 2rem;
						background: white;
						cursor: pointer;
						background-size: 80% 80%;
						background-repeat: no-repeat;
						background-position: 50% 50%;
						margin-right: 2rem;
						vertical-align: middle;
						border: .1rem solid #333;
						border-radius: .3rem;
						text-align: center;

					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.pencil{
						background-image: url("../pics/paint-brush.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.eraser{
						background-image: url("../pics/rubber-eraser.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.clear{
						background-image: url("../pics/garbage.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li > span{
						display: inline-block;
						background: black;
						vertical-align: middle;
					}

	container#main > div#chat{
		position: relative;
		display: inline-block;
		width: 33%;
		min-height: 100%;
		border: .1rem solid #000000;
		border-radius: .3rem;	
	}
		container#main > div#chat > div.chatHistory{
			position: relative;
			display: inline-block;
			
			width: 90%;
			height: 90%;
			padding: 5%;
			padding-bottom: 0;


			overflow-y: auto;
			overflow-x: hidden;

			top : 0;
			left : 0;

			text-align: left;
		
		}
			container#main > div#chat > div.chatHistory > div.msg{
				display: inline-block;
				width: 90%;
				margin: 2%;
				padding : .2rem;

			}
				container#main > div#chat > div.chatHistory > div.msg > span.sender{
					display: inline-block;
					width: 100%;
					height: 2rem;
					font-weight: bold;
				}
				container#main > div#chat > div.chatHistory > div.msg > span.contents{
					display: inline-block;
					width: 100%;
				}

			container#main > div#chat > div.inputBox{
				position: absolute;
				display: inline-block;
				width: 100%;
				height: 3rem;

				bottom : 0;
				left : 0;
				font-size : 0;
				

				background: #333;
				border-top: .1rem solid #333;
			}
				container#main > div#chat > div.inputBox > * {
					font-size: 1rem;
				}

				container#main > div#chat > div.inputBox > textarea#chatInput{
					padding: 0;
					margin : 0;
					resize : none;

					display: inline-block;
					width: 70%;
					padding-left: 5%;
					padding-right: 5%;
					white-space: nowrap;
					overflow: hidden;
					height: 2rem;
					line-height: 2rem;
					font-size: 1.2rem;
					margin-top: .5rem;
					vertical-align: top;
					border-radius : 2rem;
					
					font-family : "NotoSans_Light";
				}
				container#main > div#chat > div.inputBox > textarea#chatInput:focus{
					outline:none;
				}

				container#main > div#chat > div.inputBox > input[type=button]{
					display: inline-block;
					width: calc(15% - .3rem);
					margin-left: 2%;
					height: 2.2rem;
					vertical-align: top;
					margin-top: .5rem;

					border: .1rem solid #999;					
					border-radius: 1rem;
					outline: none;
					font-family: "Pangolin";
					color: #fff;
					background: #333;
					cursor: pointer;
					transition: background .1s ease;
				}
				container#main > div#chat > div.inputBox > input[type=button]:hover{
					background: #505050;
				}




tingRoom > div.waitingRoomBtns{
		display: block;
		margin: 0 auto;
		width: 25%;
	}
		div#waiting > container#waitingBoard > div.waitingRoom > div.waitingRoomBtns > span{
			display: inline-block;
			width: 45%;
			height: 3rem;
			line-height: 3rem;
			background: #fff;
			color: #333;
			border-radius: 1rem;
			border: .1rem solid #333;

			margin-right: 2%;

			transition: background .3s ease;
			cursor: pointer;
		}
		div#waiting > container#waitingBoard > div.waitingRoom > div.waitingRoomBtns > span:hover{
			background: #333;
			color: #fff;
		}


header{
	text-align: left;
	display: inline-block;
	margin-top: 2rem;
	width: 95%;
	height: 3rem;
	line-height: 3rem;
	font-size: 2rem;
	font-family: "Pangolin";

	border: .1rem solid #000000;
	border-radius: 1rem;
}
header::selection{
	background: none;
	color: black;
}
	header > a{
		width: 10%;
		display: inline-block;
		margin-left: 2rem;
		color: #333;
		text-decoration: none;
	}
	header > a:hover, header > a:visited, header > a:linked, header > a:active{
		color: #333;
		text-decoration: none;
	}
	header > div{
		display: inline-block;
		font-size: 1.5rem;
	}

	header > div.answer{
		width: 78%;
		text-align: center;
		font-size: 2rem;


	}
	header > div.clock{
		width: 8%;
	}

container#main{
	display: inline-block;
	max-width: 1920px;
	width: 100%;
	min-height: 80vh;
	height: 80vh;
	overflow: visible;
	text-align: center;
	font-size: 0;
}
	container#main > * {
		font-size: 1rem;
		vertical-align: top;
		height: 100%;
	}

	container#main > div#userBox{
		display: inline-block;	
		width: 13%;
		height: auto;
		overflow: auto;
		max-height: 100%;
	}
	container#main > div#userBox > span.exitGameRoom{
		display: inline-block;
		width: 8rem;
		height: 4rem
		line-height: 4rem;
		font-size: 1.5rem;
		background: #333;

		font-family: "Pangolin";

		color: #fff;
		border: .1rem solid #333;
		border-radius: .5rem;
		cursor: pointer;

		transition: background .3s ease;
	}
	container#main > div#userBox > span.exitGameRoom:hover{
		background: #fff;
		color: #333;
	}
		container#main > div#userBox > ul.users{
			display: inline-block;
			width: 90%;
			height: auto;
			padding: 4%;
			border: .1rem solid #000000;
			border-radius: .3rem;
		7Ù ] request

[ INFO: SEND ] index.html

[ INFO: SEND ] request index.html 		200

[ INFO: È ] receive message

[ INFO: 
 ] ws closed

[ INFO: fd = 22 ] Accepted

[ INFO: GET /css/font.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

 ] request

[ INFO: SEND ] css/font.css

[ INFO: fd = 28 ] Accepted

[ INFO: fd = 29 ] Accepted

[ INFO: fd = 30 ] Accepted

[ INFO: SEND ] request css/font.css 		200

[ INFO: GET /css/index.css HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: text/css,*/*;q=0.1
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

ss/index.css">
	<script type = "text/javascript" src = "/js/index.js"></script>
</head>
<body>
	<div id = "wrap">
		<div id = "waiting">
			<header class = "waitingHeader"><a href = "/">DOODLE</a></header>
			<container id = "waitingBoard">
				<div class = "nicknameInputBox">
					<label for="nickname">Nickname | </label><input type="text" placeholder="Type your nickname" id="nickname"/>
					<button onclick = "statusManager.userAdd(event)">Play</button>
				</div>
				<div class = "roomLists">
					<span id="prevBtn" onclick="waiting.prev(event)">&lt;</span>
					<span id="nextBtn" onclick="waiting.next(event)">&gt;</span>
					<ul class ="rooms">
						
					</ul>
					<span class = "makeRoomBtn" onclick="statusManager.makeRoom(event)">
						Make Room!
					</span>
					<span class = "reFreshRoomBtn" onclick="statusManager.refreshRoomList(event)"></span>
				</div>
				<div class = "waitingRoom">
					<span class="title">WAITING ROOM</span>
					<ul class = "waitingMembers">
					</ul>
					<div class = "waitingRoomBtns" >
						<span class="exitRoom" onclick="statusManager.exitRoom(event)" >EXIT</span>
						<span class="gameStart" onclick="statusManager.enterGameRoom(event)" >START!</span>
					</div>
				</div>
			</container>
		</div>
		<div id = "app">
			<header><a href = "/">DOODLE</a><div class = "answer"></div><div class = "clock">60.00</div></header>
			<container id = "main">
					<div id = "userBox">
						<ul class = "users">
							<li class = "user">
								<span>
									User01
								</span>
							</li>
							<li class = "user">
								<span>
									User02
								</span>
							</li>
							<li class = "user">
								<span>
									User03
								</span>
							</li>
						</ul>
						<span class = "exitGameRoom" onclick="statusManager.exitGameRoom(event)">EXIT</span>
					</div>
					<div id = "playBoard">
						<div id = "canvasBox">
							<canvas id = "canvas">Ïù¥ Î∏åÎùºÏö∞Ï†ÄÎäî canvas ÌÉúÍ∑∏Î•º ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.</canvas>
						</div>
						<div id = "toolBox">
							<div id = "colorBox">
								<ul id = "colors">
									<li class = "color" data-color="#ffffff" ></li>
									<li class = "color" data-color="#000000" ></li>
									<li class = "color" data-color="#FE1B02" ></li>
									<li class = "color" data-color="#FC9C00" ></li>
									<li class = "color" data-color="#FDFC06" ></li>
									<li class = "color" data-color="#01FE02" ></li>
									<li class = "color" data-color="#005FFF" ></li>
									<li class = "color" data-color="#0212FF" ></li>
									<li class = "color" data-color="#FF00FB" ></li>
								</ul>
							</div>
							<div id = "brushBox">
								<ul id = "brushs">
									<li class = "pencil"></li>
									<li class = "eraser"></li>
									<li class = "brush" data-px = "3"><span></span></li>
									<li class = "brush" data-px = "6"><span></span></li>
									<li class = "brush" data-px = "9"><span></span></li>
									<li class = "brush" data-px = "12"><span></span></li>
									<li class = "clear"></li>
								</ul>
							</div>
						</div>
					</div> 
					<div id = "chat">
						<div class = "chatHistory">
						</div>
						<div class = "inputBox">
							<textarea id = "chatInput"></textarea>
							<input id = "sendBtn" type = "button" value = "SEND"/>
						</div>
					</div>
			</container>
		</div>
	</div>
</body>
</html>h: 90%;
				margin: 2%;
				padding : .2rem;

			}
				container#main > div#chat > div.chatHistory > div.msg > span.sender{
					display: inline-block;
					width: 100%;
					height: 2rem;
					font-weight: bold;
				}
				container#main > div#chat > div.chatHistory > div.msg > span.contents{
					display: inline-block;
					width: 100%;
				}

			container#main > div#chat > div.inputBox{
				position: absolute;
				display: inline-block;
				width: 100%;
				height: 3rem;

				bottom : 0;
				left : 0;
				font-size : 0;
				

				background: #333;
				border-top: .1rem solid #333;
			}
				container#main > div#chat > div.inputBox > * {
					font-size: 1rem;
				}

				container#main > div#chat > div.inputBox > textarea#chatInput{
					padding: 0;
					margin : 0;
					resize : none;

					display: inline-block;
					width: 70%;
					padding-left: 5%;
					padding-right: 5%;
					white-space: nowrap;
					overflow: hidden;
					height: 2rem;
					line-height: 2rem;
					font-size: 1.2rem;
					margin-top: .5rem;
					vertical-align: top;
					border-radius : 2rem;
					
					font-family : "NotoSans_Light";
				}
				container#main > div#chat > div.inputBox > textarea#chatInput:focus{
					outline:none;
				}

				container#main > div#chat > div.inputBox > input[type=button]{
					display: inline-block;
					width: calc(15% - .3rem);
					margin-left: 2%;
					height: 2.2rem;
					vertical-align: top;
					margin-top: .5rem;

					border: .1rem solid #999;					
					border-radius: 1rem;
					outline: none;
					font-family: "Pangolin";
					color: #fff;
					background: #333;
					cursor: pointer;
					transition: background .1s ease;
				}
				container#main > div#chat > div.inputBox > input[type=button]:hover{
					background: #505050;
				}




tingRoom > div.waitingRoomBtns{
		display: block;
		margin: 0 auto;
		width: 25%;
	}
		div#waiting > container#waitingBoard > div.waitingRoom > div.waitingRoomBtns > span{
			display: inline-block;
			width: 45%;
			height: 3rem;
			line-height: 3rem;
			background: #fff;
			color: #333;
			border-radius: 1rem;
			border: .1rem solid #333;

			margin-right: 2%;

			transition: background .3s ease;
			cursor: pointer;
		}
		div#waiting > container#waitingBoard > div.waitingRoom > div.waitingRoomBtns > span:hover{
			background: #333;
			color: #fff;
		}


header{
	text-align: left;
	display: inline-block;
	margin-top: 2rem;
	width: 95%;
	height: 3rem;
	line-height: 3rem;
	font-size: 2rem;
	font-family: "Pangolin";

	border: .1rem solid #000000;
	border-radius: 1rem;
}
header::selection{
	background: none;
	color: black;
}
	header > a{
		width: 10%;
		display: inline-block;
		margin-left: 2rem;
		color: #333;
		text-decoration: none;
	}
	header > a:hover, header > a:visited, header > a:linked, header > a:active{
		color: #333;
		text-decoration: none;
	}
	header > div{
		display: inline-block;
		font-size: 1.5rem;
	}

	header > div.answer{
		width: 78%;
		text-align: center;
		font-size: 2rem;


	}
	header > div.clock{
		width: 8%;
	}

container#main{
	display: inline-block;
	max-width: 1920px;
	width: 100%;
	min-height: 80vh;
	height: 80vh;
	overflow: visible;
	text-align: center;
	font-size: 0;
}
	container#main > * {
		font-size: 1rem;
		vertical-align: top;
		height: 100%;
	}

	container#main > div#userBox{
		display: inline-block;	
		width: 13%;
		height: auto;
		overflow: auto;
		max-height: 100%;
	}
	container#main > div#userBox > span.exitGameRoom{
		display: inline-block;
		width: 8rem;
		height: 4rem
		line-height: 4rem;
		font-size: 1.5rem;
		background: #333;

		font-family: "Pangolin";

		color: #fff;
		border: .1rem solid #333;
		border-radius: .5rem;
		cursor: pointer;

		transition: background .3s ease;
	}
	container#main > div#userBox > span.exitGameRoom:hover{
		background: #fff;
		color: #333;
	}
		container#main > div#userBox > ul.users{
			display: inline-block;
			width: 90%;
			height: auto;
			padding: 4%;
			border: .1rem solid #000000;
			border-radius: .3rem;
		7Ù ] request

[ INFO: SEND ] css/index.css

[ INFO: GET /js/index.js HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

rc: url('./font/NotoSansKR-Light.otf');
}
@font-face{
	font-family: 'NotoSans_Medium';
	src: url('./font/NotoSansKR-Medium.otf');
}
@font-face{
	font-family: 'NotoSans_Regular';
	src: url('./font/NotoSansKR-Regular.otf');
}
@font-face{
	font-family: 'NotoSans_Thin-Windows';
	src: url('./font/NotoSansKR-Thin-Windows.otf');
}
@font-face{
	font-family: 'Pangolin';
	src: url('./font/Pangolin-Regular.ttf');
}



@media (max-width: 300px){html{font-size: 4vw;}}
@media (min-width:301px) and (max-width:400px){html{font-size:4vw;}}
@media (min-width:401px) and (max-width:500px){html{font-size:4vw;}}
@media (min-width:501px) and (max-width:600px){html{font-size:4vw;}}
@media (min-width:601px) and (max-width:700px){html{font-size:3vw;}}
@media (min-width:701px) and (max-width:800px){html{font-size:2vw;}} /* change to mobile*/
@media (min-width:801px) and (max-width:900px){html{font-size:2vw;}}
@media (min-width:901px) and (max-width:1024px){html{font-size:1.5vw;}}
@media (min-width:1025px) and (max-width:1330px){html{font-size:1.5vw;}}
@media (min-width:1331px) and (max-width:1800px){html{font-size:1vw;}}
@media (min-width:1801px) and (max-width:1979px){html{font-size:22px;}}
@media (min-width:1980px){ html{ font-size: 25px; } }
/*@media (min-width:2001px) and (max-width:2200px){html{font-size:1vw;}}
@media (min-width:2001px){html{font-size:1vw;}}
*/
21Auni1E6Cuni1E6EUbreveuni0214uni1EE4uni1EE6Uhornuni1EE8uni1EF0uni1EEAuni1EECuni1EEEUhungarumlautuni0216Umacronuni1E7AUogonekUringUtildeuni1E78WacuteWcircumflex	WdieresisWgraveYcircumflexuni1E8Euni1EF4Ygraveuni1EF6uni0232uni1EF8Zacute
Zdotaccentuni1E92abreveuni1EAFuni1EB7uni1EB1uni1EB3uni1EB5uni1EA5uni1EADuni1EA7uni1EA9uni1EABuni0201uni1EA1uni1EA3uni0203amacronaogonek
aringacuteaeacuteuni1E09ccircumflex
cdotaccentdcaronuni1E0Duni1E0Funi01C6ebreveecaronuni1E1Duni1EBFuni1EC7uni1EC1uni1EC3uni1EC5uni0205
edotaccentuni1EB9uni1EBBuni0207emacronuni1E17uni1E15eogonekuni1EBDuni0259gcarongcircumflexgcommaaccent
gdotaccentuni1E21hbaruni1E2Bhcircumflexuni1E25ibreveuni0209uni1E2F	i.loclTRKuni1ECBuni1EC9uni020Bimacroniogonekitildeuni0237jcircumflexkcommaaccentkgreenlandiclacutelcaronlcommaaccentldotuni1E37uni01C9uni1E3Buni1E43nacutencaronncommaaccentuni1E45uni1E47enguni01CCuni1E49obreveuni1ED1uni1ED9uni1ED3uni1ED5uni1ED7uni020Duni022Buni0231uni1ECDuni1ECFohornuni1EDBuni1EE3uni1EDDuni1EDFuni1EE1ohungarumlautuni020Fomacronuni1E53uni1E51uni01EBoslashacuteuni1E4Duni1E4Funi022Dracutercaronrcommaaccentuni0211uni1E5Buni0213uni1E5Fsacuteuni1E65uni1E67scircumflexscommaaccentuni1E61uni1E63uni1E69tbartcaronuni0163uni021Buni1E97uni1E6Duni1E6Fubreveuni0215uni1EE5uni1EE7uhornuni1EE9uni1EF1uni1EEBuni1EEDuni1EEFuhungarumlautuni0217umacronuni1E7Buogonekuringutildeuni1E79wacutewcircumflex	wdieresiswgraveycircumflexuni1E8Funi1EF5ygraveuni1EF7uni0233uni1EF9zacute
zdotaccentuni1E93f_ff_f_if_f_lp_a_n_g_o_l_i_n_h_u_g.ligap_a_n_g_o_l_i_n_l_o_v_e.ligauni0410uni0411uni0412uni0413uni0403uni0490uni0414uni0415uni0400uni0401uni0416uni0417uni0418uni0419uni040Duni041Auni040Cuni041Buni041Cuni041Duni041Euni041Funi0420uni0421uni0422uni0423uni040Euni0424uni0425uni0427uni0426uni0428uni0429uni040Funi042Cuni042Auni042Buni0409uni040Auni0405uni0404uni042Duni0406uni0407uni0408uni040Buni042Euni042Funi0402uni0462uni046Auni0472uni0474uni0492uni0494uni0496uni0498uni049Auni049Cuni04A0uni04A2uni04A4uni0524uni04AAuni04AEuni04B0uni04B6uni04B8uni04BAuni04C0uni04C1uni04CBuni04D0uni04D2uni04D4uni04D6uni04D8uni04DCuni04DEuni04E2uni04E4uni04E6uni04E8uni04EEuni04F0uni04F2uni04F4uni04F6uni04F8uni051Auni051Cuni0430uni0431uni0432uni0433uni0453uni0491uni0434uni0435uni0450uni0451uni0436uni0437uni0438uni0439uni045Duni043Auni045Cuni043Buni043Cuni043Duni043Euni043Funi0440uni0441uni0442uni0443uni045Euni0444uni0445uni0447uni0446uni0448uni0449uni045Funi044Cuni044Auni044Buni0459uni045Auni0455uni0454uni044Duni0456uni0457uni0458uni045Buni044Euni044Funi0452uni0463uni046Buni0473uni0475uni0493uni0495uni0497uni0499uni049Buni049Duni04A1uni04A3uni04A5uni0525uni04ABuni04AFuni04B1uni04B7uni04B9uni04BBuni04CFuni04C2uni04CCuni04D1uni04D3uni04D5uni04D7uni04D9uni04DDuni04DFuni04E3uni04E5uni04E7uni04E9uni04EFuni04F1uni04F3uni04F5uni04F7uni04F9uni051Buni051Dzero.lfone.lftwo.lfthree.lffour.lffive.lfsix.lfseven.lfeight.lfnine.lfuni2080uni2081uni2082uni2083uni2084uni2085uni2086uni2087uni2088uni2089uni2070uni00B9uni00B2uni00B3uni2074uni2075uni2076uni2077uni2078uni2079periodcentered.loclCAT
figuredashuni2015uni00ADuni2010uni2007uni200Auni2008uni2009uni200Buni20B5colonmonetarydongEurouni20B2uni20B4uni20ADlirauni20BAuni20BCuni20A6pesetauni20B1uni20BDuni20B9uni20B8uni20AEuni20A9uni2219uni2215emptysetuni2126uni2206uni00B5uni2113uni2116	estimatedminuteseconduni0308uni0307	gravecomb	acutecombuni030Bcaroncomb.altuni0302uni030Cuni0306uni030A	tildecombuni0304hookabovecombuni030Funi0311uni0312uni031Bdotbelowcombuni0324uni0326uni0327uni0328uni032Euni0331uni0335uni0337uni0338uni02BCuni02BBuni02BAuni02C9uni02CBuni02B9uni02BFuni02BEuni02CAuni02CCuni02C8brevecombcydescendercydescendercy.caseuni03060301uni03060300uni03060309uni03060303uni03020301uni03020300uni03020309uni03020303verticalbarcyverticalbarcy.caseuni00A0 ] request

[ INFO: SEND ] js/index.js

[ INFO: SEND ] request css/index.css 		200

[ INFO: SEND ] request js/index.js 		200

[ INFO: GET /pics/garbage.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

$Á$∞Ê·'⁄"$∑ñ∂ÇHhå¶-¬Iˆ&! ] request

[ INFO: SEND ] pics/garbage.png

[ INFO: SEND ] request pics/garbage.png 		200

[ INFO: fd = 29 ] Accepted

[ INFO: fd = 30 ] Accepted
[ INFO: GET /css/font/Pangolin-Regular.ttf HTTP/1.1
Host: localhost
Connection: keep-alive
Origin: http://localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/css/font.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

NâOm‹väÈrï+¯Z|Z“æfÖt…Jâµ‚ö§≠ï.[©∞êk‚ìô§]c°tÈJÅ)úü §ÌS§ÀówFÒÖ¯4¶}¡(ÈÊõç‚S8ÿ∂Q∫ÑyfÆ¯Ù•—ÊJó—Eôt ] request


[ INFO: SEND ] css/font/Pangolin-Regular.ttf

[ INFO: GET /css/font/NotoSansKR-Light.otf HTTP/1.1
Host: localhost
Connection: keep-alive
Origin: http://localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: */*
Referer: http://localhost/css/font.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

g = document.getElementById("canvas");
		this.tag.width = this.tag.offsetWidth;
		this.tag.height = this.tag.offsetHeight;

		canvas.addEventListener("mousedown", this.mouseHandle.bind(this));
		canvas.addEventListener("mousemove", this.mouseHandle.bind(this));
		canvas.addEventListener("mouseup", this.mouseHandle.bind(this));
		this.canvas = this.tag.getContext("2d");
		
		this.brushType = true;
		this.color = "#000000";
		this.canvas.fillStyle = this.color;
        this.canvas.strokeStyle = this.color;

        this.px = 3;
        this.canvas.lineWidth = this.px;
        this.canvas.lineCap = "round";
        this.canvas.lineJoin = "round";

		this.prevX = this.prevY = 0;
		this.x = this.y = 0;

		this.initEvent();
		this.prepareToDraw();
	}

	initEvent(){
		this.colors = document.getElementsByClassName("color");
		for( let i = 0 ; i < this.colors.length ; i++){
			this.colors[i].addEventListener("click", this.colorChange.bind(this));
			this.colors[i].style.background = this.colors[i].getAttribute("data-color");
		}

		
		this.brush = document.getElementsByClassName("brush");
		for( let i = 0 ; i < this.brush.length ; i++){
			this.brush[i].addEventListener("click", this.brushChange.bind(this));
			this.brush[i].children[0].style.width = this.brush[i].getAttribute("data-px") + "px";
			this.brush[i].children[0].style.height = this.brush[i].getAttribute("data-px") + "px";
			this.brush[i].children[0].style.borderRadius = this.brush[i].getAttribute("data-px")/2 + 2 + "px";
		}
		

		this.pencil = document.getElementsByClassName("pencil")[0];
		this.pencil.addEventListener("click", this.setPencil.bind(this));
		

		this.eraser = document.getElementsByClassName("eraser")[0];
		this.eraser.addEventListener("click", this.setEraser.bind(this));

		let clear = document.getElementsByClassName("clear")[0];
		clear.addEventListener("click", this.clearCanvas.bind(this));
	}

	prepareToDraw(){
		if( !isPainter ) return;
		this.colors[1].style.backgroundBlendMode="darken";
		this.colors[1].style.className = "color on";

		this.brush[0].style.background = "#D2EAFF";

		this.pencil.style.backgroundColor = "#ccc";
	}

	mouseHandle(event){
		event.preventDefault();
		if( !isPainter ) return;
		if( this.flag ){
			if( this.locked ) return;
			this.locked = true;
			setTimeout(() => this.locked = false, 20);
		}
		if( event.type == "mousedown"){
			this.flag = true;
			let position = this.getMousePos(event);
			this.prevX = this.x = position.x;
			this.prevY = this.y = position.y;
			this.draw();
		}
		else if( this.flag && event.type == "mousemove"){
			if( this.flag ){
				let position = this.getMousePos(event);
				this.prevX = this.x;
				this.prevY = this.y;
				this.x = position.x;
				this.y = position.y;
				this.draw();
			}
		}
		else if( event.type == "mouseup"){
			this.flag = false;
			let position = this.getMousePos(event);
			this.prevX = this.x;
			this.prevY = this.y;
			this.x = position.x;
			this.y = position.y;
			this.draw();
		}
		
	}

	getMousePos(evt) {
		let rect = this.tag.getBoundingClientRect();
		return {
			x: evt.offsetX,
			y: evt.offsetY
		};
  	}

  	draw(){
        this.canvas.beginPath();
        this.canvas.moveTo(this.prevX,this.prevY);
        this.canvas.lineTo(this.x, this.y);
        this.canvas.stroke();

        this.sendDrawingPoint();
  	}

  	drawWithJson(){
  		if( isPainter ) return;

  	}
  	sendDrawingPoint(){
  		if( !isPainter ) return;
  		let msg = "00";
  		let jsonObject = {
  			prevX : this.prevX,
  			prevY : this.prevY,
  			x : this.x,
  			y : this.y,
  			color : this.color,
  			px : this.px
  		}
  		console.log(jsonObject);
  		msg += JSON.stringify(jsonObject);
  		ws.send(msg);
  	}

  	colorChange(event){
  		if( !isPainter ) return;
  		let target = event.target;
  		if( !target.hasAttribute("data-color") ) target = target.parentNode;

  		let color = target.getAttribute("data-color");
		this.canvas.fillStyle = this.canvas.strokeStyle = this.color = color;

		for(let i = 0; i< this.colors.length; i++){
			this.colors[i].style.backgroundBlendMode = "normal";
			this.colors[i].className = "color";
		}
		target.style.backgroundBlendMode = "darken";
		target.className = "color on";
		this.setPencil();
  	}

  	brushChange(event){
  		if( !isPainter ) return;
  		event.preventDefault();
  		let target = event.target;
  		if( !target.hasAttribute("data-px") )target = target.parentNode;

  		this.px = target.getAttribute("data-px");
  		this.canvas.lineWidth = this.px;

  		for( let i = 0 ; i < this.brush.length; i++){
  			this.brush[i].style.background = "none";
  		}

  		target.style.background = "#D2EAFF";
  	}
  	setPencil(event){
  		if( !isPainter ) return;
  		this.brushType = true;
  		this.canvas.fillStyle = this.color;
  		this.canvas.strokeStyle = this.color;
		this.eraser.style.backgroundColor = "#fff";
		this.pencil.style.backgroundColor = "#ccc";
  	}
  	setEraser(event){
  		if( !isPainter ) return;
  		this.brushType = false;
		this.canvas.fillStyle = "#ffffff";
        this.canvas.strokeStyle = "#ffffff";
        this.pencil.style.backgroundColor = "#fff";
        this.eraser.style.backgroundColor = "#ccc";
  	}
  	clearCanvas(event){
  		this.canvas.clearRect(0, 0, this.tag.clientWidth, this.tag.clientHeight);
  	}
}



class Websocket{
	constructor(){
		this.ws = new WebSocket("ws://localhost:12345");
		this.ws.onopen = function (event) {
			console.log("ws connected");
		};
		this.ws.onmessage = function (event){

			let packet = event.data;

			// let tmp = event.data.replace(/(?:\r\n|\n|\r)/g, '<br/>'); // dummyData
			// let packet = '01{"code":"00","msg":"'+tmp+'","uid":1,"nickname":"someone","timestamp":"'+new Date()+'"}';
			let code = packet.substring(0,2);
			let json = packet.substring(2,packet.length);
			let jsonObject = JSON.parse(json);

			if( code === "01" ){ // message
				chat.addMsg(jsonObject);
				return;
			}
			if( code == "00"){
				draw.drawWithJson(jsonObject);
			}
			if( code === "23"){
				notice.showAnswerLen(jsonObject);
				return;
			}
		}
		this.ws.onclose = function(event) {
			console.log("ws close");
		    setTimeout(() => {
		    	ws = new Websocket();
		    	if( status != 0 ){
		    		console.log("reconnect ws");
		    		if( status == 1 ) statusManager.exitRoom();
		    		else if( status == 2 ) statusManager.exitGameRoom();
		    	}
			}, 500);
		};
		this.ws.onerror = function(event){
			// this.ws.close();
			console.log("ws catched error");
		}
	}

	send(msg){
		this.ws.send(msg);
	}
}= "_ ";
		}
	}
}

class Chatting{
	constructor(){
		this.chatHistory = document.getElementsByClassName("chatHistory")[0];
		this.initEvent();
	}
	addMsg(jsonObject){
		this.chatHistory.innerHTML += "\
			<div class = 'msg'>\
				<span class = 'sender'>"
					+ jsonObject.nickname  + " | " + 
				"</span>\
				<span class = 'contents'>"
				 + jsonObject.msg + 
				"</span>\
			</div>";
		this.chatHistory.scrollTop = this.chatHistory.scrollHeight;
	}

	initEvent(){
		let chatInput = document.getElementById("chatInput");
		let sendBtn = document.getElementById("sendBtn");

		sendBtn.addEventListener("click", this.sendMessage);
		chatInput.addEventListener("keydown", this.keyPressHandle.bind(this));
	}
	sendMessage(event){
		event.preventDefault();
		let box = document.getElementById("chatInput");
		if( box.value == "" ) return;		
		let msg = "01";
		7Ù ] request

[ INFO: SEND ] css/font/NotoSansKR-Light.otf

[ INFO: fd = 33 ] Accepted

[ INFO: fd = 35 ] Accepted

[ INFO: GET /pics/rubber-eraser.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

in-right: .3rem;
	}
		container#main > div#playBoard > div#canvasBox{
			width: 100%;
			height: 80%;
			background: white;

			border: .1rem solid #000000;
			border-radius: .3rem;
		}
			container#main > div#playBoard > div#canvasBox > canvas#canvas{
				width: 100%;
				height: 100%;
			}
		container#main > div#playBoard > div#toolBox{
			width: 98%;
			margin: 1%;
			height: 19%;
		}
			container#main > div#playBoard > div#toolBox > div{
				width: 100%;
				height: 50%;
			}
			container#main > div#playBoard > div#toolBox > div#colorBox{
				/*background: red;*/
			}
				container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors{
					display: inline-block;
					width: 100%;
					height: 100%;
					list-style: none;
					text-align: left;
				}
					container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors > li{
						display: inline-block;
						width: 2rem;
						height: 2rem;
						border : .1rem solid black;
						border-radius: 1rem;
						margin-right: 1rem;
						cursor: pointer;
						position: relative;
					}
					container#main > div#playBoard > div#toolBox > div#colorBox > ul#colors > li.on:after{
						content:'';
						position: absolute;
						width: 100%;
						height: 100%;
						top: 0;
						left: 0;
						border-radius: 1rem;
						background: black;
						opacity:.3;
					}

			container#main > div#playBoard > div#toolBox > div#brushBox{
				/*background: yellow;*/
			}			
				container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs{
					display: inline-block;
					width: 100%;
					height: 100%;
					list-style: none;
					text-align: left;
				}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li{
						display: inline-block;
						margin-right: .5rem;
						width: 2rem;
						height: 2rem;
						line-height: 2rem;
						background: white;
						cursor: pointer;
						background-size: 80% 80%;
						background-repeat: no-repeat;
						background-position: 50% 50%;
						margin-right: 2rem;
						vertical-align: middle;
						border: .1rem solid #333;
						border-radius: .3rem;
						text-align: center;

					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.pencil{
						background-image: url("../pics/paint-brush.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.eraser{
						background-image: url("../pics/rubber-eraser.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li.clear{
						background-image: url("../pics/garbage.png");
					}
					container#main > div#playBoard > div#toolBox > div#brushBox > ul#brushs > li > span{
						display: inline-block;
						background: black;
						vertical-align: middle;
					}

	container#main > div#chat{
		position: relative;
		display: inline-block;
		width: 33%;
		min-height: 100%;
		border: .1rem solid #000000;
		border-radius: .3rem;	
	}
		container#main > div#chat > div.chatHistory{
			position: relative;
			display: inline-block;
			
			width: 90%;
			height: 90%;
			padding: 5%;
			padding-bottom: 0;


			overflow-y: auto;
			overflow-x: hidden;

			top : 0;
			left : 0;

			text-align: left;
		
		}
			container#main > div#chat > div.chatHistory > div.msg{
				display: inline-block;
				width: 90%;
				margin: 2%;
				padding : .2rem;

			}
				container#main > div#chat > div.chatHistory > div.msg > span.sender{
					display: inline-block;
					width: 100%;
					height: 2rem;
					font-weight: bold;
				}
				container#main > div#chat > div.chatHistory > div.msg > span.contents{
					display: inline-block;
					width: 100%;
				}

			container#main > div#chat > div.inputBox{
				position: absolute;
				display: inline-block;
				width: 100%;
				height: 3rem;

				bottom : 0;
				left : 0;
				font-size : 0;
				

				background: #333;
				border-top: .1rem solid #333;
			}
				container#main > div#chat > div.inputBox > * {
					font-size: 1rem;
				}

				container#main > div#chat > div.inputBox > textarea#chatInput{
					padding: 0;
					margin : 0;
					resize : none;

					display: inline-block;
					width: 70%;
					padding-left: 5%;
					padding-right: 5%;
					white-space: nowrap;
					overflow: hidden;
					height: 2rem;
					line-height: 2rem;
					font-size: 1.2rem;
					margin-top: .5rem;
					vertical-align: top;
					border-radius : 2rem;
					
					font-family : "NotoSans_Light";
				}
				container#main > div#chat > div.inputBox > textarea#chatInput:focus{
					outline:none;
				}

				container#main > div#chat > div.inputBox > input[type=button]{
					display: inline-block;
					width: calc(15% - .3rem);
					margin-left: 2%;
					height: 2.2rem;
					vertical-align: top;
					margin-top: .5rem;

					border: .1rem solid #999;					
					border-radius: 1rem;
					outline: none;
					font-family: "Pangolin";
					color: #fff;
					background: #333;
					cursor: pointer;
					transition: background .1s ease;
				}
				container#main > div#chat > div.inputBox > input[type=button]:hover{
					background: #505050;
				}




tingRoom > div.waitingRoomBtns{
		display: block;
		margin: 0 auto;
		width: 25%;
	}
		div#waiting > container#waitingBoard > div.waitingRoom > div.waitingRoomBtns > span{
			display: inline-block;
			width: 45%;
			height: 3rem;
			line-height: 3rem;
			background: #fff;
			color: #333;
			border-radius: 1rem;
			border: .1rem solid #333;

			margin-right: 2%;

			transition: background .3s ease;
			cursor: pointer;
		}
		div#waiting > container#waitingBoard > div.waitingRoom > div.waitingRoomBtns > span:hover{
			background: #333;
			color: #fff;
		}


header{
	text-align: left;
	display: inline-block;
	margin-top: 2rem;
	width: 95%;
	height: 3rem;
	line-height: 3rem;
	font-size: 2rem;
	font-family: "Pangolin";

	border: .1rem solid #000000;
	border-radius: 1rem;
}
header::selection{
	background: none;
	color: black;
}
	header > a{
		width: 10%;
		display: inline-block;
		margin-left: 2rem;
		color: #333;
		text-decoration: none;
	}
	header > a:hover, header > a:visited, header > a:linked, header > a:active{
		color: #333;
		text-decoration: none;
	}
	header > div{
		display: inline-block;
		font-size: 1.5rem;
	}

	header > div.answer{
		width: 78%;
		text-align: center;
		font-size: 2rem;


	}
	header > div.clock{
		width: 8%;
	}

container#main{
	display: inline-block;
	max-width: 1920px;
	width: 100%;
	min-height: 80vh;
	height: 80vh;
	overflow: visible;
	text-align: center;
	font-size: 0;
}
	container#main > * {
		font-size: 1rem;
		vertical-align: top;
		height: 100%;
	}

	container#main > div#userBox{
		display: inline-block;	
		width: 13%;
		height: auto;
		overflow: auto;
		max-height: 100%;
	}
	container#main > div#userBox > span.exitGameRoom{
		display: inline-block;
		width: 8rem;
		height: 4rem
		line-height: 4rem;
		font-size: 1.5rem;
		background: #333;

		font-family: "Pangolin";

		color: #fff;
		border: .1rem solid #333;
		border-radius: .5rem;
		cursor: pointer;

		transition: background .3s ease;
	}
	container#main > div#userBox > span.exitGameRoom:hover{
		background: #fff;
		color: #333;
	}
		container#main > div#userBox > ul.users{
			display: inline-block;
			width: 90%;
			height: auto;
			padding: 4%;
			border: .1rem solid #000000;
			border-radius: .3rem;
		7Ù ] request

[ INFO: SEND ] pics/rubber-eraser.png

[ INFO: SEND ] request pics/rubber-eraser.png 		200

[ INFO: GET /pics/paint-brush.png HTTP/1.1
Host: localhost
Connection: keep-alive
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://localhost/css/index.css
Accept-Encoding: gzip, deflate, br
Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7

font-family: 'NotoSans_Medium';
	src: url('./font/NotoSansKR-Medium.otf');
}
@font-face{
	font-family: 'NotoSans_Regular';
	src: url('./font/NotoSansKR-Regular.otf');
}
@font-face{
	font-family: 'NotoSans_Thin-Windows';
	src: url('./font/NotoSansKR-Thin-Windows.otf');
}
@font-face{
	font-family: 'Pangolin';
	src: url('./font/Pangolin-Regular.ttf');
}



@media (max-width: 300px){html{font-size: 4vw;}}
@media (min-width:301px) and (max-width:400px){html{font-size:4vw;}}
@media (min-width:401px) and (max-width:500px){html{font-size:4vw;}}
@media (min-width:501px) and (max-width:600px){html{font-size:4vw;}}
@media (min-width:601px) and (max-width:700px){html{font-size:3vw;}}
@media (min-width:701px) and (max-width:800px){html{font-size:2vw;}} /* change to mobile*/
@media (min-width:801px) and (max-width:900px){html{font-size:2vw;}}
@media (min-width:901px) and (max-width:1024px){html{font-size:1.5vw;}}
@media (min-width:1025px) and (max-width:1330px){html{font-size:1.5vw;}}
@media (min-width:1331px) and (max-width:1800px){html{font-size:1vw;}}
@media (min-width:1801px) and (max-width:1979px){html{font-size:22px;}}
@media (min-width:1980px){ html{ font-size: 25px; } }
/*@media (min-width:2001px) and (max-width:2200px){html{font-size:1vw;}}
@media (min-width:2001px){html{font-size:1vw;}}
*/
SC@ ] request

[ INFO: SEND ] pics/paint-brush.png

[ INFO: SEND ] request pics/paint-brush.png 		200

[ INFO: SEND ] request css/font/Pangolin-Regular.ttf 		200

[ INFO: SEND ] request css/font/NotoSansKR-Light.otf 		200

[ INFO: accept() ] connect

[ INFO: 00{"prevX":191,"prevY":223,"x":201,"y":223,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":201,"prevY":223,"x":293,"y":222,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":293,"prevY":222,"x":428,"y":237,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":428,"prevY":237,"x":545,"y":248,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":545,"prevY":248,"x":569,"y":249,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":569,"prevY":249,"x":572,"y":249,"color":"#000000","px":3} ] receive message

[ INFO: 00{"prevX":572,"prevY":249,"x":571,"y":249,"color":"#000000","px":3} ] receive message

